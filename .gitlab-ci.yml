image: registry.gitlab.com/materials-modeling/icet:latest


build_linux:
  stage: build
  tags:
    - linux
  script:
    - mkdir build
    - cd build
    - cmake ..
    - make
  artifacts:
    expire_in: 14 days
    paths:
      - build


tests:
  stage: test
  tags:
    - linux
  dependencies:
    - build_linux
  script:
    - export PATH=${PATH}:${HOME}/.local/bin
    - export PYTHONPATH=$PWD:$PWD/build/src/:$PYTHONPATH
    - coverage run tests/main.py
    - coverage report -m
    - coverage html -d coverage
    - for f in benchmark/*.py; do python3 "$f"; done
    - for f in examples/*.py; do python3 "$f"; done
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  artifacts:
    expire_in: 14 days
    paths:
      - coverage/


style_check:
  stage: test
  tags:
    - linux
  script:
    - cd tests/
    - python3 check_flake8__.py
  allow_failure: true


pages:
  stage: deploy
  dependencies:
    - build_linux
    - tests
  script:
    # prepare homepage
    - mkdir public
    - mv doc/google*.html public/
    # coverage report
    - mv coverage/ public/
    # letsencrypt setup
    - fname=`awk '{split($0, s, "."); print s[1]}' doc/homepage/letsencrypt-setup.html`
    - mkdir -p public/.well-known/acme-challenge/
    - mv doc/homepage/letsencrypt-setup.html public/.well-known/acme-challenge/$fname
    - ls -l public/.well-known/acme-challenge/
    # C++ documentation (doxygen)
    - cd doc/apidoc/
    - doxygen Doxyfile
    - cd ../..
    - mv doc/apidoc/html/ public/apidoc/
    # user guide (sphinx)
    - pip3 install breathe
    - export PYTHONPATH=$PWD:$PWD/build/src/:$PYTHONPATH
    - python3 -m pip install cloud_sptheme
    - sphinx-build doc/userguide/source/ public/
    - chmod go-rwX -R public/
  artifacts:
    expire_in: 30 days
    paths:
      - public
  only:
    - master
