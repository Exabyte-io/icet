image: $CI_REGISTRY/$CI_PROJECT_PATH/cicd

variables:
  INSTDIR: "local_installation"

before_script:
  - export PYTHONPATH=$INSTDIR:${PYTHONPATH}


#------------------- build stage -------------------

.build:
  stage: build
  artifacts:
    expire_in: 2 days
    paths:
      - local_installation/
  script:
    - pip3 install --target=$INSTDIR .

build:linux:
  extends: .build
  tags:
    - linux

build:macos:
  extends: .build
  tags:
    - macos


#------------------- test stage -------------------

.basic_tests:
  stage: test
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  script:
    - xdoctest icet
    - xdoctest mchammer
    - coverage run --source $INSTDIR/icet,$INSTDIR/mchammer tests/main.py
    - coverage report -m
    - coverage html
    - coverage xml
  artifacts:
    when: always
    reports:
      junit: coverage.xml

basic_tests:linux:
  extends: .basic_tests
  needs:
    - build:linux
  tags:
    - linux
  artifacts:
    expire_in: 2 days
    paths:
      - htmlcov/

benchmarks_examples:
  stage: test
  tags:
    - linux
  only:
    - schedules
  needs:
    - build:linux
  script:
    - for f in benchmark/*.py; do python3 -u "$f"; done
    - pwd=`pwd`
    - |
      for dir in `find examples -name '*.py' | xargs gdirname | sort -uk1` ; do
        cd $pwd
        cd $dir
        for file in `ls *.py | sort -gk1 | grep -v __ | grep -v parallel_monte_carlo` ; do
          echo "Running $file -- `date`"
          python3 $file
          echo "Finished running $file -- `date`"
        done
        echo
      done

style_check:
  stage: test
  tags:
    - linux
  needs:
    - build:linux
  script:
    - flake8 icet/ mchammer/ tests/ benchmark/ doc/ examples/

test_documentation:
  stage: test
  tags:
    - linux
  needs:
    - build:linux
  except:
   - master
  artifacts:
    expire_in: 1 days
    paths:
      - public
  script:
    - mkdir public
    - cd doc/apidoc/
    - doxygen Doxyfile
    - cd ../..
    - mv doc/apidoc/html/ public/apidoc/
    - sphinx-build -b doctest -W doc/userguide/source/ public/
    - sphinx-build -W doc/userguide/source/ public/


#------------------- deploy stage -------------------

pages:
  stage: deploy
  tags:
    - linux
  artifacts:
    expire_in: 14 days
    paths:
      - public
  only:
    - master
  script:
    - mkdir -p public/dev
    - mv htmlcov/ public/
    # --------------------------
    # STABLE VERSION
    - tag=$(git tag | tail -1)
    - echo "tag= $tag"
    - git checkout $tag
    - cd doc/apidoc/
    - doxygen Doxyfile
    - cd ../..
    - mv doc/apidoc/html/ public/apidoc/
    - sphinx-build -W doc/userguide/source/ public/
    - cd examples
    - find tutorial/ -print | zip ../public/tutorial.zip -@
    - find advanced_topics/ -print | zip ../public/advanced_topics.zip -@
    - cd ..
    - find tests/ -print | zip public/tests.zip tests/structure_databases/*.db -@
    # --------------------------
    # DEVELOPMENT VERSION
    - git checkout master
    - tag=$(git describe | tail -1)
    - echo "tag= $tag"
    - cd doc/apidoc/
    - doxygen Doxyfile
    - cd ../..
    - mv doc/apidoc/html/ public/dev/apidoc/
    - sed -i "s/version = ''/version = '$tag'/" doc/userguide/source/conf.py
    - grep version doc/userguide/source/conf.py
    - sphinx-build -W doc/userguide/source/ public/dev/
    - cd examples
    - find tutorial/ -print | zip ../public/dev/tutorial.zip -@
    - find advanced_topics/ -print | zip ../public/dev/advanced_topics.zip -@
    - cd ..
    - find tests/ -print | zip public/dev/tests.zip tests/structure_databases/*.db -@
    # --------------------------
    - ls -l public/

pypi:
  stage: deploy
  tags:
    - linux
  rules:
    - if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_TAG != ""
      when: manual
  script:
    - export
    - python3 setup.py sdist
    - ls -l dist/
    - python3 -m twine upload dist/*
