from ase import Atoms
from ase.build import bulk
from icet import ClusterSpace
import numpy as np
from spglib import get_spacegroup


prim = bulk('Au', a=4.0, crystalstructure='hcp')
cutoffs = [7.0, 7.0, 7.0]
subelements = ['Au', 'Pd']
cs = ClusterSpace(prim, cutoffs, subelements)
print(cs)
count_failures = 0
count_all = 0

# Testing pair no 1
count_all += 1
atoms_1 = Atoms(symbols='Au6PdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='Au7Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))


if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1 differ')
    count_failures += 1


# Testing pair no 2
count_all += 1
atoms_1 = Atoms(symbols='Au5Pd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='Au6Pd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 2 differ')
    count_failures += 1


# Testing pair no 3
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='Au5PdAuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 3 differ')
    count_failures += 1


# Testing pair no 4
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='Au4PdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 4 differ')
    count_failures += 1


# Testing pair no 5
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd3Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='Au5Pd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 5 differ')
    count_failures += 1


# Testing pair no 6
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAu2PdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='Au4PdAu2Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 6 differ')
    count_failures += 1


# Testing pair no 7
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAuPd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='Au4PdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 7 differ')
    count_failures += 1


# Testing pair no 8
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2Au2Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 8 differ')
    count_failures += 1


# Testing pair no 9
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2AuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='Au4PdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 9 differ')
    count_failures += 1


# Testing pair no 10
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd3AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 10 differ')
    count_failures += 1


# Testing pair no 11
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd4Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='Au4Pd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 11 differ')
    count_failures += 1


# Testing pair no 12
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3Pd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 12 differ')
    count_failures += 1


# Testing pair no 13
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 13 differ')
    count_failures += 1


# Testing pair no 14
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAu2Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='Au2PdAu2PdAuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 14 differ')
    count_failures += 1


# Testing pair no 15
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 15 differ')
    count_failures += 1


# Testing pair no 16
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd3Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 16 differ')
    count_failures += 1


# Testing pair no 17
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPdAuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 17 differ')
    count_failures += 1


# Testing pair no 18
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 18 differ')
    count_failures += 1


# Testing pair no 19
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3Au2Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='Au2PdAu2Pd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 19 differ')
    count_failures += 1


# Testing pair no 20
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 20 differ')
    count_failures += 1


# Testing pair no 21
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 21 differ')
    count_failures += 1


# Testing pair no 22
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd4AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='Au2PdAuPd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 22 differ')
    count_failures += 1


# Testing pair no 23
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd5Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='Au3Pd5', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 23 differ')
    count_failures += 1


# Testing pair no 24
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPdAuPd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 24 differ')
    count_failures += 1


# Testing pair no 25
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd2AuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='Au2PdAuPd2AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 25 differ')
    count_failures += 1


# Testing pair no 26
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd4Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='Au2PdAuPd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 26 differ')
    count_failures += 1


# Testing pair no 27
count_all += 1
atoms_1 = Atoms(symbols='AuPd2Au2Pd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 27 differ')
    count_failures += 1


# Testing pair no 28
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 28 differ')
    count_failures += 1


# Testing pair no 29
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='AuPdAuPd2AuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 29 differ')
    count_failures += 1


# Testing pair no 30
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd3Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 30 differ')
    count_failures += 1


# Testing pair no 31
count_all += 1
atoms_1 = Atoms(symbols='AuPd4AuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='Au2PdAuPd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 31 differ')
    count_failures += 1


# Testing pair no 32
count_all += 1
atoms_1 = Atoms(symbols='AuPd4AuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='AuPd2AuPd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 32 differ')
    count_failures += 1


# Testing pair no 33
count_all += 1
atoms_1 = Atoms(symbols='AuPd6Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='Au2Pd6', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 33 differ')
    count_failures += 1


# Testing pair no 34
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 34 differ')
    count_failures += 1


# Testing pair no 35
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='AuPdAuPd5', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 35 differ')
    count_failures += 1


# Testing pair no 36
count_all += 1
atoms_1 = Atoms(symbols='PdAuPd6', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

atoms_2 = Atoms(symbols='AuPd7', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 26.127890589687233]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 36 differ')
    count_failures += 1


# Testing pair no 37
count_all += 1
atoms_1 = Atoms(symbols='Au6PdAu', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au7Pd', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 37 differ')
    count_failures += 1


# Testing pair no 38
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPdAu', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAuPd', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 38 differ')
    count_failures += 1


# Testing pair no 39
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2AuPd', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAuPd2', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 39 differ')
    count_failures += 1


# Testing pair no 40
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd3Au', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd3', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 40 differ')
    count_failures += 1


# Testing pair no 41
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2AuPdAu', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd2Au', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 41 differ')
    count_failures += 1


# Testing pair no 42
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3Pd2', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 42 differ')
    count_failures += 1


# Testing pair no 43
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd2Au', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2Au2Pd', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 43 differ')
    count_failures += 1


# Testing pair no 44
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAu2Pd', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2PdAuPd', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 44 differ')
    count_failures += 1


# Testing pair no 45
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPdAu', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPd', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 45 differ')
    count_failures += 1


# Testing pair no 46
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd3Au', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd3AuPd', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 46 differ')
    count_failures += 1


# Testing pair no 47
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPdAuPd', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAuPd2', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 47 differ')
    count_failures += 1


# Testing pair no 48
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd2Au', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd2', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 48 differ')
    count_failures += 1


# Testing pair no 49
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3Au2Pd', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2Pd3', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 49 differ')
    count_failures += 1


# Testing pair no 50
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPdAu', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 50 differ')
    count_failures += 1


# Testing pair no 51
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPd2', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd3', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 51 differ')
    count_failures += 1


# Testing pair no 52
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd4AuPd', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPd4', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 52 differ')
    count_failures += 1


# Testing pair no 53
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd5Au', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd5', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 53 differ')
    count_failures += 1


# Testing pair no 54
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPdAu', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd2Au', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 54 differ')
    count_failures += 1


# Testing pair no 55
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPd2', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd2AuPd2', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 55 differ')
    count_failures += 1


# Testing pair no 56
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd3Au', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd2Au2Pd3', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 56 differ')
    count_failures += 1


# Testing pair no 57
count_all += 1
atoms_1 = Atoms(symbols='AuPd4AuPdAu', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd4Au', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 57 differ')
    count_failures += 1


# Testing pair no 58
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPdAuPd2', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd3', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 58 differ')
    count_failures += 1


# Testing pair no 59
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPd4', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd5', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 59 differ')
    count_failures += 1


# Testing pair no 60
count_all += 1
atoms_1 = Atoms(symbols='PdAuPd6', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd7', pbc=True,
                cell=[[4.0, 0.0, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [2.0, 10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   6.92820323e+00,  -6.53197265e+00],
         [6.00000000e+00,   5.77350269e+00,  -9.79795897e+00],
         [2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [4.00000000e+00,  -1.32799596e-16,  -6.53197265e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 60 differ')
    count_failures += 1


# Testing pair no 61
count_all += 1
atoms_1 = Atoms(symbols='Au6PdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au7Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 61 differ')
    count_failures += 1


# Testing pair no 62
count_all += 1
atoms_1 = Atoms(symbols='Au5Pd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au6Pd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 62 differ')
    count_failures += 1


# Testing pair no 63
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 63 differ')
    count_failures += 1


# Testing pair no 64
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 64 differ')
    count_failures += 1


# Testing pair no 65
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd3Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 65 differ')
    count_failures += 1


# Testing pair no 66
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAu2PdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAu2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 66 differ')
    count_failures += 1


# Testing pair no 67
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAuPd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 67 differ')
    count_failures += 1


# Testing pair no 68
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2Au2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 68 differ')
    count_failures += 1


# Testing pair no 69
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2AuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 69 differ')
    count_failures += 1


# Testing pair no 70
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd3AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 70 differ')
    count_failures += 1


# Testing pair no 71
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd4Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4Pd4', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 71 differ')
    count_failures += 1


# Testing pair no 72
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3Pd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 72 differ')
    count_failures += 1


# Testing pair no 73
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 73 differ')
    count_failures += 1


# Testing pair no 74
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAu2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2PdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 74 differ')
    count_failures += 1


# Testing pair no 75
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 75 differ')
    count_failures += 1


# Testing pair no 76
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd3Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 76 differ')
    count_failures += 1


# Testing pair no 77
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 77 differ')
    count_failures += 1


# Testing pair no 78
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 78 differ')
    count_failures += 1


# Testing pair no 79
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3Au2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2Pd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 79 differ')
    count_failures += 1


# Testing pair no 80
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 80 differ')
    count_failures += 1


# Testing pair no 81
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 81 differ')
    count_failures += 1


# Testing pair no 82
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd4AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPd4', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 82 differ')
    count_failures += 1


# Testing pair no 83
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd5Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd5', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 83 differ')
    count_failures += 1


# Testing pair no 84
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPdAuPd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 84 differ')
    count_failures += 1


# Testing pair no 85
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd2AuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPd2AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 85 differ')
    count_failures += 1


# Testing pair no 86
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd4Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPd4', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 86 differ')
    count_failures += 1


# Testing pair no 87
count_all += 1
atoms_1 = Atoms(symbols='AuPd2Au2Pd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 87 differ')
    count_failures += 1


# Testing pair no 88
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 88 differ')
    count_failures += 1


# Testing pair no 89
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd2AuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 89 differ')
    count_failures += 1


# Testing pair no 90
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd3Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 90 differ')
    count_failures += 1


# Testing pair no 91
count_all += 1
atoms_1 = Atoms(symbols='AuPd4AuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPd4', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 91 differ')
    count_failures += 1


# Testing pair no 92
count_all += 1
atoms_1 = Atoms(symbols='AuPd4AuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd2AuPd4', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 92 differ')
    count_failures += 1


# Testing pair no 93
count_all += 1
atoms_1 = Atoms(symbols='AuPd6Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd6', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 93 differ')
    count_failures += 1


# Testing pair no 94
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 94 differ')
    count_failures += 1


# Testing pair no 95
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPd4', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd5', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 95 differ')
    count_failures += 1


# Testing pair no 96
count_all += 1
atoms_1 = Atoms(symbols='PdAuPd6', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd7', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, 0.0],
                    [2.0, -3.4641016151377544, -13.063945294843617]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -7.62760945e-16],
         [4.44089210e-16,   2.30940108e+00,  -9.79795897e+00],
         [4.44089210e-16,  -1.59786682e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 96 differ')
    count_failures += 1


# Testing pair no 97
count_all += 1
atoms_1 = Atoms(symbols='Au6PdAu', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au7Pd', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 97 differ')
    count_failures += 1


# Testing pair no 98
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAu2Pd', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au6Pd2', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 98 differ')
    count_failures += 1


# Testing pair no 99
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPdAu', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAuPd', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 99 differ')
    count_failures += 1


# Testing pair no 100
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2AuPd', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAuPd2', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 100 differ')
    count_failures += 1


# Testing pair no 101
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd3Au', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd3', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 101 differ')
    count_failures += 1


# Testing pair no 102
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAu2PdAu', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd2Au', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 102 differ')
    count_failures += 1


# Testing pair no 103
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2Au2Pd', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 103 differ')
    count_failures += 1


# Testing pair no 104
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2AuPdAu', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd2Au', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 104 differ')
    count_failures += 1


# Testing pair no 105
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3Pd2', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 105 differ')
    count_failures += 1


# Testing pair no 106
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2PdAuPd', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd3', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 106 differ')
    count_failures += 1


# Testing pair no 107
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd2Au', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 107 differ')
    count_failures += 1


# Testing pair no 108
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAu2Pd', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd3', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 108 differ')
    count_failures += 1


# Testing pair no 109
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPdAu', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPd', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 109 differ')
    count_failures += 1


# Testing pair no 110
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPd2', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd3AuPd', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 110 differ')
    count_failures += 1


# Testing pair no 111
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd2AuPd', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4Pd4', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 111 differ')
    count_failures += 1


# Testing pair no 112
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd3Au', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd3AuPd', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 112 differ')
    count_failures += 1


# Testing pair no 113
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPdAuPd', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd3AuPd', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 113 differ')
    count_failures += 1


# Testing pair no 114
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd2Au', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd2', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 114 differ')
    count_failures += 1


# Testing pair no 115
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3Au2Pd', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2Pd3', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 115 differ')
    count_failures += 1


# Testing pair no 116
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPdAu', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 116 differ')
    count_failures += 1


# Testing pair no 117
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPd2', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd3', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 117 differ')
    count_failures += 1


# Testing pair no 118
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd4AuPd', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPd4', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 118 differ')
    count_failures += 1


# Testing pair no 119
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd5Au', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd5', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 119 differ')
    count_failures += 1


# Testing pair no 120
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPdAuPd2Au', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 120 differ')
    count_failures += 1


# Testing pair no 121
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd2AuPdAu', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd4Au', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 121 differ')
    count_failures += 1


# Testing pair no 122
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd2AuPd2', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd5', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 122 differ')
    count_failures += 1


# Testing pair no 123
count_all += 1
atoms_1 = Atoms(symbols='AuPd2Au2Pd3', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd3', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 123 differ')
    count_failures += 1


# Testing pair no 124
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPdAu', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 124 differ')
    count_failures += 1


# Testing pair no 125
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPd2', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd5', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 125 differ')
    count_failures += 1


# Testing pair no 126
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd3Au', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd3', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 126 differ')
    count_failures += 1


# Testing pair no 127
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd4', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd6', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 127 differ')
    count_failures += 1


# Testing pair no 128
count_all += 1
atoms_1 = Atoms(symbols='AuPd4AuPdAu', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd4Au', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 128 differ')
    count_failures += 1


# Testing pair no 129
count_all += 1
atoms_1 = Atoms(symbols='AuPd6Au', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd4AuPd2', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 129 differ')
    count_failures += 1


# Testing pair no 130
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPdAuPd2', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd3', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 130 differ')
    count_failures += 1


# Testing pair no 131
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPd4', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd5', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 131 differ')
    count_failures += 1


# Testing pair no 132
count_all += 1
atoms_1 = Atoms(symbols='PdAuPd6', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd7', pbc=True,
                cell=[
                    [6.0, -3.4641016151377544, 0.0],
                    [-4.0, 0.0, -6.531972647421808],
                    [4.0, 6.92820323027551, 1.7763568394002505e-15]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   9.50887157e-16],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -9.43591339e-16],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -1.39176430e-15,  -1.38768055e-15],
         [1.55431223e-15,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 132 differ')
    count_failures += 1


# Testing pair no 133
count_all += 1
atoms_1 = Atoms(symbols='Au6PdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au7Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 133 differ')
    count_failures += 1


# Testing pair no 134
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAu2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 134 differ')
    count_failures += 1


# Testing pair no 135
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 135 differ')
    count_failures += 1


# Testing pair no 136
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 136 differ')
    count_failures += 1


# Testing pair no 137
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd3Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 137 differ')
    count_failures += 1


# Testing pair no 138
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAu2PdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au6Pd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 138 differ')
    count_failures += 1


# Testing pair no 139
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAuPd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print(cv_1)
    print(cv_2)
    print('Cluster vectors from equivalent structure pair 139 differ')
    count_failures += 1


# Testing pair no 144
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAu2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 144 differ')
    count_failures += 1


# Testing pair no 145
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 145 differ')
    count_failures += 1


# Testing pair no 146
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 146 differ')
    count_failures += 1


# Testing pair no 148
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd3Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd3AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 148 differ')
    count_failures += 1


# Testing pair no 150
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 150 differ')
    count_failures += 1


# Testing pair no 151
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3Au2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2Pd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 151 differ')
    count_failures += 1


# Testing pair no 154
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd4AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPd4', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 154 differ')
    count_failures += 1


# Testing pair no 155
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd5Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd5', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 155 differ')
    count_failures += 1


# Testing pair no 157
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd2AuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4Pd4', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 157 differ')
    count_failures += 1

# Testing pair no 161
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd5', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 161 differ')
    count_failures += 1


# Testing pair no 164
count_all += 1
atoms_1 = Atoms(symbols='AuPd4AuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd6', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 164 differ')
    count_failures += 1


# Testing pair no 165
count_all += 1
atoms_1 = Atoms(symbols='AuPd6Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd2AuPd4', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 165 differ')
    count_failures += 1


# Testing pair no 166
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 166 differ')
    count_failures += 1


# Testing pair no 167
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPd4', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd5', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 167 differ')
    count_failures += 1


# Testing pair no 168
count_all += 1
atoms_1 = Atoms(symbols='PdAuPd6', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd7', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.531972647421808],
                    [0.0, -6.928203230275509, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -9.79795897e+00],
         [0.00000000e+00,   1.18993345e-16,  -6.53197265e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 168 differ')
    count_failures += 1


# Testing pair no 169
count_all += 1
atoms_1 = Atoms(symbols='Au6PdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au7Pd', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 169 differ')
    count_failures += 1


# Testing pair no 170
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAu2Pd', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd2Au', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 170 differ')
    count_failures += 1


# Testing pair no 171
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 171 differ')
    count_failures += 1


# Testing pair no 172
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd3', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 172 differ')
    count_failures += 1


# Testing pair no 173
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2AuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd3', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 173 differ')
    count_failures += 1


# Testing pair no 174
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd3Au', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd3', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 174 differ')
    count_failures += 1


# Testing pair no 175
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAu2PdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au6Pd2', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 175 differ')
    count_failures += 1


# Testing pair no 176
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAuPd2Au', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd3', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 176 differ')
    count_failures += 1


# Testing pair no 178
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3Pd2', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 178 differ')
    count_failures += 1


# Testing pair no 180
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd2Au', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2Au2Pd', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 180 differ')
    count_failures += 1


# Testing pair no 181
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd3', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 181 differ')
    count_failures += 1


# Testing pair no 182
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAu2Pd', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd3', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 182 differ')
    count_failures += 1


# Testing pair no 183
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 183 differ')
    count_failures += 1


# Testing pair no 184
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 184 differ')
    count_failures += 1


# Testing pair no 185
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd2AuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd4Au', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 185 differ')
    count_failures += 1


# Testing pair no 186
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd3Au', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd3AuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 186 differ')
    count_failures += 1


# Testing pair no 187
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd4', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd5', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 187 differ')
    count_failures += 1


# Testing pair no 188
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPdAuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 188 differ')
    count_failures += 1


# Testing pair no 189
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd2Au', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 189 differ')
    count_failures += 1


# Testing pair no 190
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3Au2Pd', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 190 differ')
    count_failures += 1


# Testing pair no 191
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 191 differ')
    count_failures += 1


# Testing pair no 192
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd3', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 192 differ')
    count_failures += 1


# Testing pair no 193
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd4AuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd5', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 193 differ')
    count_failures += 1


# Testing pair no 194
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd5Au', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd5', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 194 differ')
    count_failures += 1


# Testing pair no 195
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPdAuPd2Au', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd3AuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 195 differ')
    count_failures += 1


# Testing pair no 196
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd2AuPdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4Pd4', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 196 differ')
    count_failures += 1


# Testing pair no 199
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd3AuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 199 differ')
    count_failures += 1


# Testing pair no 200
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd5', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 200 differ')
    count_failures += 1


# Testing pair no 201
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd3Au', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd2Au2Pd3', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 201 differ')
    count_failures += 1

# Testing pair no 203
count_all += 1
atoms_1 = Atoms(symbols='AuPd4AuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd6', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 203 differ')
    count_failures += 1


# Testing pair no 204
count_all += 1
atoms_1 = Atoms(symbols='AuPd6Au', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd2AuPd4', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 204 differ')
    count_failures += 1


# Testing pair no 205
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPdAuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd3', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 205 differ')
    count_failures += 1


# Testing pair no 206
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPd4', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd5', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 206 differ')
    count_failures += 1


# Testing pair no 207
count_all += 1
atoms_1 = Atoms(symbols='PdAuPd6', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd7', pbc=True,
                cell=[[0.0, 6.928203230275509, 0.0],
                      [
                    4.0, 0.0, 6.531972647421808],
                    [4.0, 0.0, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   8.06686531e-16],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 207 differ')
    count_failures += 1


# Testing pair no 208
count_all += 1
atoms_1 = Atoms(symbols='Au6PdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au7Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 208 differ')
    count_failures += 1


# Testing pair no 209
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 209 differ')
    count_failures += 1


# Testing pair no 210
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 210 differ')
    count_failures += 1


# Testing pair no 211
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd3Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 211 differ')
    count_failures += 1


# Testing pair no 212
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2AuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 212 differ')
    count_failures += 1


# Testing pair no 213
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3Pd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 213 differ')
    count_failures += 1


# Testing pair no 214
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2Au2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 214 differ')
    count_failures += 1


# Testing pair no 215
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAu2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2PdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 215 differ')
    count_failures += 1


# Testing pair no 216
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 216 differ')
    count_failures += 1


# Testing pair no 217
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd3Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd3AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 217 differ')
    count_failures += 1


# Testing pair no 218
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 218 differ')
    count_failures += 1


# Testing pair no 219
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 219 differ')
    count_failures += 1


# Testing pair no 220
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3Au2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2Pd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 220 differ')
    count_failures += 1


# Testing pair no 221
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 221 differ')
    count_failures += 1


# Testing pair no 222
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 222 differ')
    count_failures += 1


# Testing pair no 223
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd4AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPd4', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 223 differ')
    count_failures += 1


# Testing pair no 224
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd5Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd5', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 224 differ')
    count_failures += 1


# Testing pair no 225
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 225 differ')
    count_failures += 1


# Testing pair no 226
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd2AuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 226 differ')
    count_failures += 1


# Testing pair no 227
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd3Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd2Au2Pd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 227 differ')
    count_failures += 1


# Testing pair no 228
count_all += 1
atoms_1 = Atoms(symbols='AuPd4AuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd4Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 228 differ')
    count_failures += 1


# Testing pair no 229
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 229 differ')
    count_failures += 1


# Testing pair no 230
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPd4', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd5', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 230 differ')
    count_failures += 1


# Testing pair no 231
count_all += 1
atoms_1 = Atoms(symbols='PdAuPd6', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd7', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, -13.856406460551018, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-2.33546889e-16,  -6.92820323e+00,   0.00000000e+00],
         [-2.33546889e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 231 differ')
    count_failures += 1


# Testing pair no 232
count_all += 1
atoms_1 = Atoms(symbols='Au6PdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au7Pd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 232 differ')
    count_failures += 1


# Testing pair no 233
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAu2Pd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd2Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 233 differ')
    count_failures += 1


# Testing pair no 234
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 234 differ')
    count_failures += 1


# Testing pair no 235
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 235 differ')
    count_failures += 1


# Testing pair no 236
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2AuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 236 differ')
    count_failures += 1


# Testing pair no 237
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd3Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 237 differ')
    count_failures += 1


# Testing pair no 238
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2AuPdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd2Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 238 differ')
    count_failures += 1


# Testing pair no 239
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3Pd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 239 differ')
    count_failures += 1


# Testing pair no 240
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2PdAuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd2Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 240 differ')
    count_failures += 1


# Testing pair no 241
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd2Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2Au2Pd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 241 differ')
    count_failures += 1


# Testing pair no 242
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 242 differ')
    count_failures += 1


# Testing pair no 243
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAu2Pd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd2Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 243 differ')
    count_failures += 1


# Testing pair no 244
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 244 differ')
    count_failures += 1


# Testing pair no 245
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 245 differ')
    count_failures += 1


# Testing pair no 246
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd2AuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd4Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 246 differ')
    count_failures += 1


# Testing pair no 247
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd3Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd3AuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 247 differ')
    count_failures += 1


# Testing pair no 248
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd4', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd5', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 248 differ')
    count_failures += 1


# Testing pair no 249
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPdAuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 249 differ')
    count_failures += 1


# Testing pair no 250
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd2Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 250 differ')
    count_failures += 1


# Testing pair no 251
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3Au2Pd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 251 differ')
    count_failures += 1


# Testing pair no 252
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 252 differ')
    count_failures += 1


# Testing pair no 253
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 253 differ')
    count_failures += 1


# Testing pair no 254
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd4AuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd5', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 254 differ')
    count_failures += 1


# Testing pair no 255
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd5Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd5', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 255 differ')
    count_failures += 1


# Testing pair no 256
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd4Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd2AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 256 differ')
    count_failures += 1


# Testing pair no 257
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd2Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 257 differ')
    count_failures += 1


# Testing pair no 258
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd2AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 258 differ')
    count_failures += 1


# Testing pair no 259
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd3Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd2Au2Pd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 259 differ')
    count_failures += 1


# Testing pair no 260
count_all += 1
atoms_1 = Atoms(symbols='AuPd4AuPdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd2AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 260 differ')
    count_failures += 1


# Testing pair no 261
count_all += 1
atoms_1 = Atoms(symbols='AuPd6Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd2AuPd4', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 261 differ')
    count_failures += 1


# Testing pair no 262
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPdAuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 262 differ')
    count_failures += 1


# Testing pair no 263
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPd4', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd5', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 263 differ')
    count_failures += 1


# Testing pair no 264
count_all += 1
atoms_1 = Atoms(symbols='PdAuPd6', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd7', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [8.0, 0.0, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.04515077e-16,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 264 differ')
    count_failures += 1


# Testing pair no 265
count_all += 1
atoms_1 = Atoms(symbols='Au6PdAu', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

atoms_2 = Atoms(symbols='Au7Pd', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 265 differ')
    count_failures += 1


# Testing pair no 266
count_all += 1
atoms_1 = Atoms(symbols='Au5Pd2Au', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

atoms_2 = Atoms(symbols='Au6Pd2', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 266 differ')
    count_failures += 1


# Testing pair no 267
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPd2', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

atoms_2 = Atoms(symbols='Au5Pd3', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 267 differ')
    count_failures += 1


# Testing pair no 268
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2Au3', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

atoms_2 = Atoms(symbols='Au3PdAu2PdAu', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 268 differ')
    count_failures += 1


# Testing pair no 269
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2Au2Pd', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 269 differ')
    count_failures += 1


# Testing pair no 270
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd3Au2', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

atoms_2 = Atoms(symbols='Au3PdAuPd2Au', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 270 differ')
    count_failures += 1


# Testing pair no 271
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd3AuPd', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 271 differ')
    count_failures += 1


# Testing pair no 272
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3Pd2', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 272 differ')
    count_failures += 1


# Testing pair no 273
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2PdAuPd', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPdAu', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 273 differ')
    count_failures += 1


# Testing pair no 274
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd2Au', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 274 differ')
    count_failures += 1


# Testing pair no 275
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd3', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd2', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 275 differ')
    count_failures += 1


# Testing pair no 276
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAu2Pd', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

atoms_2 = Atoms(symbols='Au3PdAuPd2Au', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 276 differ')
    count_failures += 1


# Testing pair no 277
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPdAu', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPd', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 277 differ')
    count_failures += 1


# Testing pair no 278
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPd2', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 278 differ')
    count_failures += 1


# Testing pair no 279
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd2Au2', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

atoms_2 = Atoms(symbols='Au3PdAuPd2Au', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 279 differ')
    count_failures += 1


# Testing pair no 280
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd2AuPd', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

atoms_2 = Atoms(symbols='Au3Pd4Au', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 280 differ')
    count_failures += 1


# Testing pair no 281
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd3Au', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 281 differ')
    count_failures += 1


# Testing pair no 282
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd4', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

atoms_2 = Atoms(symbols='Au3Pd5', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 282 differ')
    count_failures += 1


# Testing pair no 283
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3Au2Pd', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd2Au', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 283 differ')
    count_failures += 1


# Testing pair no 284
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPdAu', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPdAuPd', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 284 differ')
    count_failures += 1


# Testing pair no 285
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPd2', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd3', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 285 differ')
    count_failures += 1


# Testing pair no 286
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd5Au', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

atoms_2 = Atoms(symbols='Au2Pd4AuPd', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 286 differ')
    count_failures += 1


# Testing pair no 287
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPdAuPd2Au', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPdAuPd', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 287 differ')
    count_failures += 1


# Testing pair no 288
count_all += 1
atoms_1 = Atoms(symbols='AuPd2Au2Pd3', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd3', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 288 differ')
    count_failures += 1


# Testing pair no 289
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPdAu', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPdAuPd', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 289 differ')
    count_failures += 1


# Testing pair no 290
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPd2', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

atoms_2 = Atoms(symbols='Au2Pd4AuPd', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 290 differ')
    count_failures += 1


# Testing pair no 291
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd2AuPd', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

atoms_2 = Atoms(symbols='Au2Pd4AuPd', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 291 differ')
    count_failures += 1


# Testing pair no 292
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd3Au', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd3', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 292 differ')
    count_failures += 1


# Testing pair no 293
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd4', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

atoms_2 = Atoms(symbols='Au2Pd6', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 293 differ')
    count_failures += 1


# Testing pair no 294
count_all += 1
atoms_1 = Atoms(symbols='AuPd4AuPdAu', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

atoms_2 = Atoms(symbols='AuPdAuPd2AuPd2', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 294 differ')
    count_failures += 1


# Testing pair no 295
count_all += 1
atoms_1 = Atoms(symbols='AuPd6Au', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

atoms_2 = Atoms(symbols='AuPd4AuPd2', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 295 differ')
    count_failures += 1


# Testing pair no 296
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPdAuPd2', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd3', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 296 differ')
    count_failures += 1


# Testing pair no 297
count_all += 1
atoms_1 = Atoms(symbols='PdAuPd6', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

atoms_2 = Atoms(symbols='AuPd7', pbc=True,
                cell=[
                    4.0, 6.928203230275509, 13.063945294843617])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [0.,  0.,  6.53197265],
         [0.,  2.30940108,  9.79795897],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632],
         [2.,  3.46410162,  6.53197265],
         [2.,  5.77350269,  9.79795897]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 297 differ')
    count_failures += 1


# Testing pair no 298
count_all += 1
atoms_1 = Atoms(symbols='Au6PdAu', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au7Pd', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 298 differ')
    count_failures += 1


# Testing pair no 299
count_all += 1
atoms_1 = Atoms(symbols='Au5Pd2Au', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au6Pd2', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 299 differ')
    count_failures += 1


# Testing pair no 300
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPd2', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd3', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 300 differ')
    count_failures += 1


# Testing pair no 301
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAuPd2Au', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 301 differ')
    count_failures += 1


# Testing pair no 302
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2Au3', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2PdAu', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 302 differ')
    count_failures += 1


# Testing pair no 303
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2Au2Pd', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 303 differ')
    count_failures += 1


# Testing pair no 304
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd3Au2', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 304 differ')
    count_failures += 1


# Testing pair no 305
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd3AuPd', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 305 differ')
    count_failures += 1


# Testing pair no 306
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd4Au', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd2', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 306 differ')
    count_failures += 1


# Testing pair no 307
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3Pd2', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 307 differ')
    count_failures += 1


# Testing pair no 308
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2PdAuPd', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPdAu', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 308 differ')
    count_failures += 1


# Testing pair no 309
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd2Au', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 309 differ')
    count_failures += 1


# Testing pair no 310
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd3', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd2', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 310 differ')
    count_failures += 1


# Testing pair no 311
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAu2Pd', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 311 differ')
    count_failures += 1


# Testing pair no 312
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPdAu', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPd', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 312 differ')
    count_failures += 1


# Testing pair no 313
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPd2', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 313 differ')
    count_failures += 1


# Testing pair no 314
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd2Au2', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 314 differ')
    count_failures += 1


# Testing pair no 315
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd2AuPd', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd2', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 315 differ')
    count_failures += 1


# Testing pair no 316
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd3Au', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 316 differ')
    count_failures += 1


# Testing pair no 317
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd4', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd5', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 317 differ')
    count_failures += 1


# Testing pair no 318
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3Au2Pd', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd2Au', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 318 differ')
    count_failures += 1


# Testing pair no 319
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPdAu', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPdAuPd', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 319 differ')
    count_failures += 1


# Testing pair no 320
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPd2', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd3', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 320 differ')
    count_failures += 1


# Testing pair no 321
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd4AuPd', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd3', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 321 differ')
    count_failures += 1


# Testing pair no 322
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd5Au', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd3', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 322 differ')
    count_failures += 1


# Testing pair no 323
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPdAuPd2Au', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPdAuPd', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 323 differ')
    count_failures += 1


# Testing pair no 324
count_all += 1
atoms_1 = Atoms(symbols='AuPd2Au2Pd3', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd3', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 324 differ')
    count_failures += 1


# Testing pair no 325
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPdAu', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPdAuPd', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 325 differ')
    count_failures += 1


# Testing pair no 326
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPd2', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd3', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 326 differ')
    count_failures += 1


# Testing pair no 327
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd2AuPd', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd3', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 327 differ')
    count_failures += 1


# Testing pair no 328
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd3Au', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd3', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 328 differ')
    count_failures += 1


# Testing pair no 329
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd4', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd6', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 329 differ')
    count_failures += 1


# Testing pair no 330
count_all += 1
atoms_1 = Atoms(symbols='AuPd4AuPdAu', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd2AuPd2', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 330 differ')
    count_failures += 1


# Testing pair no 331
count_all += 1
atoms_1 = Atoms(symbols='AuPd6Au', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd4AuPd2', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 331 differ')
    count_failures += 1


# Testing pair no 332
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPdAuPd2', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd3', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 332 differ')
    count_failures += 1


# Testing pair no 333
count_all += 1
atoms_1 = Atoms(symbols='PdAuPd6', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd7', pbc=True,
                cell=[[4.0, 0.0, 6.531972647421808],
                      [
                    4.0, 0.0, -6.531972647421808],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,   0.00000000e+00,  -1.16928385e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -1.16928385e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 333 differ')
    count_failures += 1


# Testing pair no 334
count_all += 1
atoms_1 = Atoms(symbols='Au6PdAu', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au7Pd', pbc=True,
                cell=[[0.0, 0.0, 6.531972647421808],
                      [
                    8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 334 differ')
    count_failures += 1


# Testing pair no 335
count_all += 1
atoms_1 = Atoms(symbols='Au5Pd2Au', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au6Pd2', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 335 differ')
    count_failures += 1


# Testing pair no 336
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au5Pd3', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 336 differ')
    count_failures += 1


# Testing pair no 337
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAuPd2Au', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 337 differ')
    count_failures += 1


# Testing pair no 338
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2Au3', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au6Pd2', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 338 differ')
    count_failures += 1


# Testing pair no 339
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2Au2Pd', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au5Pd3', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 339 differ')
    count_failures += 1


# Testing pair no 340
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2AuPdAu', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 340 differ')
    count_failures += 1


# Testing pair no 341
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd3Au2', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au5Pd3', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 341 differ')
    count_failures += 1


# Testing pair no 342
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd4Au', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 342 differ')
    count_failures += 1


# Testing pair no 343
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3Pd2', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 343 differ')
    count_failures += 1


# Testing pair no 344
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2PdAuPd', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 344 differ')
    count_failures += 1


# Testing pair no 345
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd2Au', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au5Pd3', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 345 differ')
    count_failures += 1


# Testing pair no 346
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd3', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 346 differ')
    count_failures += 1


# Testing pair no 347
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAu2Pd', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 347 differ')
    count_failures += 1


# Testing pair no 348
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPdAu', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPd', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 348 differ')
    count_failures += 1


# Testing pair no 349
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 349 differ')
    count_failures += 1


# Testing pair no 350
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd2Au2', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au5Pd3', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 350 differ')
    count_failures += 1


# Testing pair no 351
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd2AuPd', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 351 differ')
    count_failures += 1


# Testing pair no 352
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd3Au', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au3Pd3AuPd', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 352 differ')
    count_failures += 1


# Testing pair no 353
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd4', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au3Pd5', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 353 differ')
    count_failures += 1


# Testing pair no 354
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPdAuPd', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 354 differ')
    count_failures += 1


# Testing pair no 355
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd2Au', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 355 differ')
    count_failures += 1


# Testing pair no 356
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3Au2Pd', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 356 differ')
    count_failures += 1


# Testing pair no 357
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPdAu', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 357 differ')
    count_failures += 1


# Testing pair no 358
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd3', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 358 differ')
    count_failures += 1


# Testing pair no 359
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd4AuPd', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au3Pd5', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 359 differ')
    count_failures += 1


# Testing pair no 360
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd5Au', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au3Pd5', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 360 differ')
    count_failures += 1


# Testing pair no 361
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPdAuPd2Au', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 361 differ')
    count_failures += 1


# Testing pair no 362
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd2AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd3', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 362 differ')
    count_failures += 1


# Testing pair no 363
count_all += 1
atoms_1 = Atoms(symbols='AuPd2Au2Pd3', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au3Pd5', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 363 differ')
    count_failures += 1


# Testing pair no 364
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPdAu', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 364 differ')
    count_failures += 1


# Testing pair no 365
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd3', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 365 differ')
    count_failures += 1


# Testing pair no 366
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd2AuPd', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd3', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 366 differ')
    count_failures += 1


# Testing pair no 367
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd3Au', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au3Pd5', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 367 differ')
    count_failures += 1


# Testing pair no 368
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd4', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au2Pd6', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 368 differ')
    count_failures += 1


# Testing pair no 369
count_all += 1
atoms_1 = Atoms(symbols='AuPd4AuPdAu', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd3', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 369 differ')
    count_failures += 1


# Testing pair no 370
count_all += 1
atoms_1 = Atoms(symbols='AuPd6Au', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='Au2Pd6', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 370 differ')
    count_failures += 1


# Testing pair no 371
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPdAuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd3', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 371 differ')
    count_failures += 1


# Testing pair no 372
count_all += 1
atoms_1 = Atoms(symbols='PdAuPd6', pbc=True,
                cell=[
                    [0.0, 0.0, 6.531972647421808],
                    [8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

atoms_2 = Atoms(symbols='AuPd7', pbc=True,
                cell=[[0.0, 0.0, 6.531972647421808],
                      [
                    8.0, 0.0, 0.0],
                    [-4.0, 6.928203230275509, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.,  0.,  0.],
         [0.,  2.30940108,  3.26598632],
         [-2.,  3.46410162,  0.],
         [-2.,  5.77350269,  3.26598632],
         [4.,  0.,  0.],
         [4.,  2.30940108,  3.26598632],
         [2.,  3.46410162,  0.],
         [2.,  5.77350269,  3.26598632]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 372 differ')
    count_failures += 1


# Testing pair no 373
count_all += 1
atoms_1 = Atoms(symbols='Au8PdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au9Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 373 differ')
    count_failures += 1


# Testing pair no 374
count_all += 1
atoms_1 = Atoms(symbols='Au7Pd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au8Pd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 374 differ')
    count_failures += 1


# Testing pair no 375
count_all += 1
atoms_1 = Atoms(symbols='Au6PdAuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au7PdAuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 375 differ')
    count_failures += 1


# Testing pair no 376
count_all += 1
atoms_1 = Atoms(symbols='Au6Pd2AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au6PdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 376 differ')
    count_failures += 1


# Testing pair no 377
count_all += 1
atoms_1 = Atoms(symbols='Au6Pd3Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au7Pd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 377 differ')
    count_failures += 1


# Testing pair no 378
count_all += 1
atoms_1 = Atoms(symbols='Au5PdAu2PdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au6PdAu2Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 378 differ')
    count_failures += 1


# Testing pair no 379
count_all += 1
atoms_1 = Atoms(symbols='Au5PdAuPd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au6PdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 379 differ')
    count_failures += 1


# Testing pair no 380
count_all += 1
atoms_1 = Atoms(symbols='Au5Pd2Au2Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au5PdAu2Pd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 380 differ')
    count_failures += 1


# Testing pair no 381
count_all += 1
atoms_1 = Atoms(symbols='Au5Pd2AuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au6PdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 381 differ')
    count_failures += 1


# Testing pair no 382
count_all += 1
atoms_1 = Atoms(symbols='Au5Pd3AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au5PdAuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 382 differ')
    count_failures += 1


# Testing pair no 383
count_all += 1
atoms_1 = Atoms(symbols='Au5Pd4Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au6Pd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 383 differ')
    count_failures += 1


# Testing pair no 384
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAu3PdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au5PdAu3Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 384 differ')
    count_failures += 1


# Testing pair no 385
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAu2Pd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au5PdAu2Pd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 385 differ')
    count_failures += 1


# Testing pair no 386
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPdAu2Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au4PdAu2PdAuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 386 differ')
    count_failures += 1


# Testing pair no 387
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPdAuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au5PdAuPdAuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 387 differ')
    count_failures += 1


# Testing pair no 388
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPd3Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au5PdAuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 388 differ')
    count_failures += 1


# Testing pair no 389
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2Au3Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au4PdAu3Pd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 389 differ')
    count_failures += 1


# Testing pair no 390
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2Au2PdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au5PdAu2Pd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 390 differ')
    count_failures += 1


# Testing pair no 391
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2AuPdAuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au4PdAuPdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 391 differ')
    count_failures += 1


# Testing pair no 392
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2AuPd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au5Pd2AuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 392 differ')
    count_failures += 1


# Testing pair no 393
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd3Au2Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au4PdAu2Pd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 393 differ')
    count_failures += 1


# Testing pair no 394
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd3AuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au5PdAuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 394 differ')
    count_failures += 1


# Testing pair no 395
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd3AuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au4Pd2AuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 395 differ')
    count_failures += 1


# Testing pair no 396
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd4AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au4PdAuPd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 396 differ')
    count_failures += 1


# Testing pair no 397
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd5Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au5Pd5', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 397 differ')
    count_failures += 1


# Testing pair no 398
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAu3Pd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au4PdAu3Pd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 398 differ')
    count_failures += 1


# Testing pair no 399
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAu2PdAuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au4PdAu2PdAuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 399 differ')
    count_failures += 1


# Testing pair no 400
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAu2Pd3Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au4PdAu2Pd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 400 differ')
    count_failures += 1


# Testing pair no 401
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAuPdAu2PdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au4PdAu2PdAuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 401 differ')
    count_failures += 1


# Testing pair no 402
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAuPdAuPd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au4PdAuPdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 402 differ')
    count_failures += 1


# Testing pair no 403
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAuPd2Au2Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 403 differ')
    count_failures += 1


# Testing pair no 404
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAuPd2AuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au4PdAuPd2AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 404 differ')
    count_failures += 1


# Testing pair no 405
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAuPd4Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au4PdAuPd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 405 differ')
    count_failures += 1


# Testing pair no 406
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2Au3PdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au4PdAu3Pd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 406 differ')
    count_failures += 1


# Testing pair no 407
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2Au2PdAuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAu2Pd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 407 differ')
    count_failures += 1


# Testing pair no 408
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2Au2Pd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au4Pd2Au2Pd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 408 differ')
    count_failures += 1


# Testing pair no 409
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2AuPdAu2Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au3PdAu2PdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 409 differ')
    count_failures += 1


# Testing pair no 410
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2AuPdAuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au4PdAuPdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 410 differ')
    count_failures += 1


# Testing pair no 411
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2AuPd2AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au3PdAuPd2AuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 411 differ')
    count_failures += 1


# Testing pair no 412
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2AuPd3Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au4Pd2AuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 412 differ')
    count_failures += 1


# Testing pair no 413
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd3Au2PdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au4PdAu2Pd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 413 differ')
    count_failures += 1


# Testing pair no 414
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd3Au2Pd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au3Pd2Au2Pd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 414 differ')
    count_failures += 1


# Testing pair no 415
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd3AuPdAuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 415 differ')
    count_failures += 1


# Testing pair no 416
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd3AuPd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au4Pd2AuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 416 differ')
    count_failures += 1


# Testing pair no 417
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd4Au2Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 417 differ')
    count_failures += 1


# Testing pair no 418
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd4AuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au4PdAuPd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 418 differ')
    count_failures += 1


# Testing pair no 419
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd4AuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 419 differ')
    count_failures += 1


# Testing pair no 420
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd5AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au3PdAuPd5', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 420 differ')
    count_failures += 1


# Testing pair no 421
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd6Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au4Pd6', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 421 differ')
    count_failures += 1


# Testing pair no 422
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3PdAu2Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au3PdAu2PdAu2Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 422 differ')
    count_failures += 1


# Testing pair no 423
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3PdAuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au3PdAu3PdAuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 423 differ')
    count_failures += 1


# Testing pair no 424
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3PdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 424 differ')
    count_failures += 1


# Testing pair no 425
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3Pd2AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au3PdAu2PdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 425 differ')
    count_failures += 1


# Testing pair no 426
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3Pd3Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au3PdAu3Pd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 426 differ')
    count_failures += 1


# Testing pair no 427
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3Pd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 427 differ')
    count_failures += 1


# Testing pair no 428
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2PdAuPd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au3PdAu2PdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 428 differ')
    count_failures += 1


# Testing pair no 429
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd2Au2Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2PdAu2PdAu2Pd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 429 differ')
    count_failures += 1


# Testing pair no 430
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd2AuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 430 differ')
    count_failures += 1


# Testing pair no 431
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd3AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2PdAu2PdAuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 431 differ')
    count_failures += 1


# Testing pair no 432
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd4Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 432 differ')
    count_failures += 1


# Testing pair no 433
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAu3Pd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAu2Pd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 433 differ')
    count_failures += 1


# Testing pair no 434
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAu2Pd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAu2Pd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 434 differ')
    count_failures += 1


# Testing pair no 435
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPdAu2Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2PdAu2PdAuPdAuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 435 differ')
    count_failures += 1


# Testing pair no 436
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPdAuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPdAuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 436 differ')
    count_failures += 1


# Testing pair no 437
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPd3Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 437 differ')
    count_failures += 1


# Testing pair no 438
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd2AuPdAuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAuPd2AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 438 differ')
    count_failures += 1


# Testing pair no 439
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd2AuPd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au3PdAuPd2AuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 439 differ')
    count_failures += 1


# Testing pair no 440
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd3Au2Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2PdAu2PdAuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 440 differ')
    count_failures += 1


# Testing pair no 441
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd3AuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 441 differ')
    count_failures += 1


# Testing pair no 442
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd5Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au3PdAuPd5', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 442 differ')
    count_failures += 1


# Testing pair no 443
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2Au2Pd2AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2PdAuPd2Au2Pd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 443 differ')
    count_failures += 1


# Testing pair no 444
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2Au2Pd3Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au3Pd2Au2Pd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 444 differ')
    count_failures += 1


# Testing pair no 445
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPdAuPdAuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAuPdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 445 differ')
    count_failures += 1


# Testing pair no 446
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPdAuPd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 446 differ')
    count_failures += 1


# Testing pair no 447
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd2Au2Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2PdAu2Pd2AuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 447 differ')
    count_failures += 1


# Testing pair no 448
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd2AuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au3PdAuPd2AuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 448 differ')
    count_failures += 1


# Testing pair no 449
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd3AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2PdAuPd3AuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 449 differ')
    count_failures += 1


# Testing pair no 450
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd4Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 450 differ')
    count_failures += 1


# Testing pair no 451
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3Au2PdAuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAu2Pd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 451 differ')
    count_failures += 1


# Testing pair no 452
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3Au2Pd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au3Pd2Au2Pd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 452 differ')
    count_failures += 1


# Testing pair no 453
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPdAu2Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2PdAu2PdAuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 453 differ')
    count_failures += 1


# Testing pair no 454
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPdAuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 454 differ')
    count_failures += 1


# Testing pair no 455
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPdAuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 455 differ')
    count_failures += 1


# Testing pair no 456
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPd2AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2PdAuPd2AuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 456 differ')
    count_failures += 1


# Testing pair no 457
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPd3Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au3Pd3AuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 457 differ')
    count_failures += 1


# Testing pair no 458
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd4AuPdAuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAuPd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 458 differ')
    count_failures += 1


# Testing pair no 459
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd4AuPd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 459 differ')
    count_failures += 1


# Testing pair no 460
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd4AuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2Pd3AuPd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 460 differ')
    count_failures += 1


# Testing pair no 461
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd5Au2Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2PdAu2Pd5', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 461 differ')
    count_failures += 1


# Testing pair no 462
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd5AuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au3PdAuPd5', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 462 differ')
    count_failures += 1


# Testing pair no 463
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd5AuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd5', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 463 differ')
    count_failures += 1


# Testing pair no 464
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd6AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2PdAuPd6', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 464 differ')
    count_failures += 1


# Testing pair no 465
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd7Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au3Pd7', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 465 differ')
    count_failures += 1


# Testing pair no 466
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPdAuPdAuPd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAuPdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 466 differ')
    count_failures += 1


# Testing pair no 467
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPdAuPd2AuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAuPd2AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 467 differ')
    count_failures += 1


# Testing pair no 468
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPdAuPd4Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAuPd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 468 differ')
    count_failures += 1


# Testing pair no 469
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd2Au2Pd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2PdAuPd2Au2Pd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 469 differ')
    count_failures += 1


# Testing pair no 470
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd2Au2Pd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPdAuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 470 differ')
    count_failures += 1


# Testing pair no 471
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd2AuPdAuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAuPd2AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 471 differ')
    count_failures += 1


# Testing pair no 472
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd2AuPd3Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2PdAuPd2AuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 472 differ')
    count_failures += 1


# Testing pair no 473
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd3AuPd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2PdAuPd3AuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 473 differ')
    count_failures += 1


# Testing pair no 474
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd4AuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2PdAuPd4AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 474 differ')
    count_failures += 1


# Testing pair no 475
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd4AuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='AuPdAuPd2AuPd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 475 differ')
    count_failures += 1


# Testing pair no 476
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd6Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2PdAuPd6', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 476 differ')
    count_failures += 1


# Testing pair no 477
count_all += 1
atoms_1 = Atoms(symbols='AuPd2Au2Pd2AuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2PdAuPd2Au2Pd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 477 differ')
    count_failures += 1


# Testing pair no 478
count_all += 1
atoms_1 = Atoms(symbols='AuPd2Au2Pd2AuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd2AuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 478 differ')
    count_failures += 1


# Testing pair no 479
count_all += 1
atoms_1 = Atoms(symbols='AuPd2Au2Pd4Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2Pd2Au2Pd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 479 differ')
    count_failures += 1


# Testing pair no 480
count_all += 1
atoms_1 = Atoms(symbols='AuPd2Au2Pd5', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd5', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 480 differ')
    count_failures += 1


# Testing pair no 481
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAu2Pd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2PdAuPd2AuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 481 differ')
    count_failures += 1


# Testing pair no 482
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPdAuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAuPdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 482 differ')
    count_failures += 1


# Testing pair no 483
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd2AuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 483 differ')
    count_failures += 1


# Testing pair no 484
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPd3Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPdAuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 484 differ')
    count_failures += 1


# Testing pair no 485
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='AuPdAuPd2AuPd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 485 differ')
    count_failures += 1


# Testing pair no 486
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd3AuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2PdAuPd3AuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 486 differ')
    count_failures += 1


# Testing pair no 487
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd3AuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='AuPd2AuPd2AuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 487 differ')
    count_failures += 1


# Testing pair no 488
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd5Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd5', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 488 differ')
    count_failures += 1


# Testing pair no 489
count_all += 1
atoms_1 = Atoms(symbols='AuPd3AuPd4Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2Pd3AuPd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 489 differ')
    count_failures += 1


# Testing pair no 490
count_all += 1
atoms_1 = Atoms(symbols='AuPd4AuPdAuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAuPd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 490 differ')
    count_failures += 1


# Testing pair no 491
count_all += 1
atoms_1 = Atoms(symbols='AuPd4AuPdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='AuPdAuPd2AuPd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 491 differ')
    count_failures += 1


# Testing pair no 492
count_all += 1
atoms_1 = Atoms(symbols='AuPd4AuPd3Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2Pd3AuPd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 492 differ')
    count_failures += 1


# Testing pair no 493
count_all += 1
atoms_1 = Atoms(symbols='AuPd6AuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2PdAuPd6', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 493 differ')
    count_failures += 1


# Testing pair no 494
count_all += 1
atoms_1 = Atoms(symbols='AuPd6AuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='AuPd2AuPd6', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 494 differ')
    count_failures += 1


# Testing pair no 495
count_all += 1
atoms_1 = Atoms(symbols='AuPd8Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='Au2Pd8', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 495 differ')
    count_failures += 1


# Testing pair no 496
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPdAuPdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPdAuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 496 differ')
    count_failures += 1


# Testing pair no 497
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPdAuPd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd5', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 497 differ')
    count_failures += 1


# Testing pair no 498
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPd3AuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='AuPdAuPd3AuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 498 differ')
    count_failures += 1


# Testing pair no 499
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPd6', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='AuPdAuPd7', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 499 differ')
    count_failures += 1


# Testing pair no 500
count_all += 1
atoms_1 = Atoms(symbols='PdAuPd3AuPd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='AuPd3AuPd5', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 500 differ')
    count_failures += 1


# Testing pair no 501
count_all += 1
atoms_1 = Atoms(symbols='PdAuPd8', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_1.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

atoms_2 = Atoms(symbols='AuPd9', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 0.0],
                    [0.0, 0.0, 32.65986323710904]])
atoms_2.set_positions(
    np.array(
        [[0.,   0.,   0.],
         [0.,   2.30940108,   3.26598632],
         [0.,   0.,   6.53197265],
         [0.,   2.30940108,   9.79795897],
         [0.,   0.,  13.06394529],
         [0.,   2.30940108,  16.32993162],
         [0.,   0.,  19.59591794],
         [0.,   2.30940108,  22.86190427],
         [0.,   0.,  26.12789059],
         [0.,   2.30940108,  29.39387691]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 501 differ')
    count_failures += 1


# Testing pair no 502
count_all += 1
atoms_1 = Atoms(symbols='Au8PdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au9Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 502 differ')
    count_failures += 1


# Testing pair no 503
count_all += 1
atoms_1 = Atoms(symbols='Au6PdAuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au7PdAuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 503 differ')
    count_failures += 1


# Testing pair no 504
count_all += 1
atoms_1 = Atoms(symbols='Au6Pd2AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au6PdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 504 differ')
    count_failures += 1


# Testing pair no 505
count_all += 1
atoms_1 = Atoms(symbols='Au6Pd3Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au7Pd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 505 differ')
    count_failures += 1


# Testing pair no 506
count_all += 1
atoms_1 = Atoms(symbols='Au5Pd2AuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au5PdAuPd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 506 differ')
    count_failures += 1


# Testing pair no 507
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAu3PdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au5PdAu3Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 507 differ')
    count_failures += 1


# Testing pair no 508
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAu2Pd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au5Pd2Au2Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 508 differ')
    count_failures += 1


# Testing pair no 509
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPdAu2Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au4PdAu2PdAuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 509 differ')
    count_failures += 1


# Testing pair no 510
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPdAuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au5PdAuPdAuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 510 differ')
    count_failures += 1


# Testing pair no 511
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPd3Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au5Pd3AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 511 differ')
    count_failures += 1


# Testing pair no 512
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2Au3Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au4PdAu3Pd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 512 differ')
    count_failures += 1


# Testing pair no 513
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2Au2PdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au5PdAu2Pd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 513 differ')
    count_failures += 1


# Testing pair no 514
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2AuPdAuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au4PdAuPdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 514 differ')
    count_failures += 1


# Testing pair no 515
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2AuPd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au5Pd2AuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 515 differ')
    count_failures += 1


# Testing pair no 516
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd3Au2Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au4PdAu2Pd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 516 differ')
    count_failures += 1


# Testing pair no 517
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd3AuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au5PdAuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 517 differ')
    count_failures += 1


# Testing pair no 518
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd3AuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au4Pd2AuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 518 differ')
    count_failures += 1


# Testing pair no 519
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd4AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au4PdAuPd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 519 differ')
    count_failures += 1


# Testing pair no 520
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd5Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au5Pd5', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 520 differ')
    count_failures += 1


# Testing pair no 521
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAuPdAu2PdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2PdAuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 521 differ')
    count_failures += 1


# Testing pair no 522
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2Au3PdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu3Pd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 522 differ')
    count_failures += 1


# Testing pair no 523
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2AuPdAuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 523 differ')
    count_failures += 1


# Testing pair no 524
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd3Au2PdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd3Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 524 differ')
    count_failures += 1


# Testing pair no 525
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd3AuPd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd3Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 525 differ')
    count_failures += 1


# Testing pair no 526
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd4AuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd4Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 526 differ')
    count_failures += 1


# Testing pair no 527
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3PdAu2Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2PdAu2Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 527 differ')
    count_failures += 1


# Testing pair no 528
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3PdAuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu3PdAuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 528 differ')
    count_failures += 1


# Testing pair no 529
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3PdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 529 differ')
    count_failures += 1


# Testing pair no 530
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3Pd2AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2PdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 530 differ')
    count_failures += 1


# Testing pair no 531
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3Pd3Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu3Pd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 531 differ')
    count_failures += 1


# Testing pair no 532
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3Pd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 532 differ')
    count_failures += 1


# Testing pair no 533
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2PdAuPd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPdAu2Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 533 differ')
    count_failures += 1


# Testing pair no 534
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd2AuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd2Au2Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 534 differ')
    count_failures += 1


# Testing pair no 535
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd4Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au3Pd4Au2Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 535 differ')
    count_failures += 1


# Testing pair no 536
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAu3Pd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAu2Pd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 536 differ')
    count_failures += 1


# Testing pair no 537
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAu2Pd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2Au2PdAuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 537 differ')
    count_failures += 1


# Testing pair no 538
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPdAu2Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2PdAuPdAuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 538 differ')
    count_failures += 1


# Testing pair no 539
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPdAuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPdAuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 539 differ')
    count_failures += 1


# Testing pair no 540
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPd3Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au3Pd3AuPdAuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 540 differ')
    count_failures += 1


# Testing pair no 541
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd2AuPdAuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAuPd2AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 541 differ')
    count_failures += 1


# Testing pair no 542
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd2AuPd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd2AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 542 differ')
    count_failures += 1


# Testing pair no 543
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd3Au2Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2Pd3AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 543 differ')
    count_failures += 1


# Testing pair no 544
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd3AuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 544 differ')
    count_failures += 1


# Testing pair no 545
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd5Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au3Pd5AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 545 differ')
    count_failures += 1


# Testing pair no 546
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2Au2Pd2AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPd2Au2Pd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 546 differ')
    count_failures += 1


# Testing pair no 547
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2Au2Pd3Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au3Pd3Au2Pd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 547 differ')
    count_failures += 1


# Testing pair no 548
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPdAuPdAuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAuPdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 548 differ')
    count_failures += 1


# Testing pair no 549
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPdAuPd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 549 differ')
    count_failures += 1


# Testing pair no 550
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd2Au2Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2Pd2AuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 550 differ')
    count_failures += 1


# Testing pair no 551
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd2AuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd2AuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 551 differ')
    count_failures += 1


# Testing pair no 552
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd3AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPd3AuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 552 differ')
    count_failures += 1


# Testing pair no 553
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd4Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au3Pd4AuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 553 differ')
    count_failures += 1


# Testing pair no 554
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3Au2PdAuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAu2Pd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 554 differ')
    count_failures += 1


# Testing pair no 555
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3Au2Pd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2Au2Pd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 555 differ')
    count_failures += 1


# Testing pair no 556
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPdAu2Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2PdAuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 556 differ')
    count_failures += 1


# Testing pair no 557
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPdAuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 557 differ')
    count_failures += 1


# Testing pair no 558
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPdAuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 558 differ')
    count_failures += 1


# Testing pair no 559
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPd2AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPd2AuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 559 differ')
    count_failures += 1


# Testing pair no 560
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPd3Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au3Pd3AuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 560 differ')
    count_failures += 1


# Testing pair no 561
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd4AuPdAuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAuPd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 561 differ')
    count_failures += 1


# Testing pair no 562
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd4AuPd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 562 differ')
    count_failures += 1


# Testing pair no 563
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd4AuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au2Pd3AuPd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 563 differ')
    count_failures += 1


# Testing pair no 564
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd5Au2Pd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2Pd5', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 564 differ')
    count_failures += 1


# Testing pair no 565
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd5AuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd5', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 565 differ')
    count_failures += 1


# Testing pair no 566
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd5AuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd5', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 566 differ')
    count_failures += 1


# Testing pair no 567
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd6AuPd', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPd6', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 567 differ')
    count_failures += 1


# Testing pair no 568
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd7Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='Au3Pd7', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 568 differ')
    count_failures += 1


# Testing pair no 569
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd2AuPdAuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd2AuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 569 differ')
    count_failures += 1


# Testing pair no 570
count_all += 1
atoms_1 = Atoms(symbols='AuPd2Au2Pd2AuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd2Au2Pd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 570 differ')
    count_failures += 1


# Testing pair no 571
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAu2Pd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd2AuPd3Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 571 differ')
    count_failures += 1


# Testing pair no 572
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPdAuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPdAuPd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 572 differ')
    count_failures += 1


# Testing pair no 573
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd2AuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 573 differ')
    count_failures += 1


# Testing pair no 574
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPd3Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd2Au2Pd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 574 differ')
    count_failures += 1


# Testing pair no 575
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd2AuPd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 575 differ')
    count_failures += 1


# Testing pair no 576
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd3AuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd3AuPd2Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 576 differ')
    count_failures += 1


# Testing pair no 577
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd3AuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='AuPd2AuPd2AuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 577 differ')
    count_failures += 1


# Testing pair no 578
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd5Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='AuPd2Au2Pd5', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 578 differ')
    count_failures += 1


# Testing pair no 579
count_all += 1
atoms_1 = Atoms(symbols='AuPd4AuPdAuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd4Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 579 differ')
    count_failures += 1


# Testing pair no 580
count_all += 1
atoms_1 = Atoms(symbols='AuPd4AuPdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd4AuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 580 differ')
    count_failures += 1


# Testing pair no 581
count_all += 1
atoms_1 = Atoms(symbols='AuPd4AuPd3Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='AuPd3AuPd4Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 581 differ')
    count_failures += 1


# Testing pair no 582
count_all += 1
atoms_1 = Atoms(symbols='AuPd6AuPdAu', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd6Au', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 582 differ')
    count_failures += 1


# Testing pair no 583
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPdAuPdAuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPdAuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 583 differ')
    count_failures += 1


# Testing pair no 584
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPdAuPd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd5', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 584 differ')
    count_failures += 1


# Testing pair no 585
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPd3AuPd2', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd3AuPd3', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 585 differ')
    count_failures += 1


# Testing pair no 586
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPd6', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd7', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 586 differ')
    count_failures += 1


# Testing pair no 587
count_all += 1
atoms_1 = Atoms(symbols='PdAuPd3AuPd4', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='AuPd3AuPd5', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 587 differ')
    count_failures += 1


# Testing pair no 588
count_all += 1
atoms_1 = Atoms(symbols='PdAuPd8', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

atoms_2 = Atoms(symbols='AuPd9', pbc=True,
                cell=[
                    [4.0, 0.0, 0.0],
                    [-2.0, 3.4641016151377544, 6.531972647421808],
                    [0.0, -13.856406460551018, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,   9.79795897e+00],
         [0.00000000e+00,  -4.20290541e-16,   6.53197265e+00],
         [2.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,  -3.46410162e+00,   6.53197265e+00],
         [5.55111512e-16,  -4.61880215e+00,   3.26598632e+00],
         [5.55111512e-16,  -6.92820323e+00,   6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,   9.79795897e+00],
         [2.00000000e+00,  -1.03923048e+01,   6.53197265e+00],
         [2.00000000e+00,  -8.08290377e+00,   9.79795897e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 588 differ')
    count_failures += 1


# Testing pair no 589
count_all += 1
atoms_1 = Atoms(symbols='Au8PdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au9Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 589 differ')
    count_failures += 1


# Testing pair no 590
count_all += 1
atoms_1 = Atoms(symbols='Au6PdAuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au7PdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 590 differ')
    count_failures += 1


# Testing pair no 591
count_all += 1
atoms_1 = Atoms(symbols='Au6Pd2AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au6PdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 591 differ')
    count_failures += 1


# Testing pair no 592
count_all += 1
atoms_1 = Atoms(symbols='Au6Pd3Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au7Pd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 592 differ')
    count_failures += 1


# Testing pair no 593
count_all += 1
atoms_1 = Atoms(symbols='Au5Pd2AuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAuPd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 593 differ')
    count_failures += 1


# Testing pair no 594
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAu3PdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAu3Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 594 differ')
    count_failures += 1


# Testing pair no 595
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAu2Pd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd2Au2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 595 differ')
    count_failures += 1


# Testing pair no 596
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPdAu2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAu2PdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 596 differ')
    count_failures += 1


# Testing pair no 597
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPdAuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAuPdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 597 differ')
    count_failures += 1


# Testing pair no 598
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPd3Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd3AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 598 differ')
    count_failures += 1


# Testing pair no 599
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2Au3Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAu3Pd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 599 differ')
    count_failures += 1


# Testing pair no 600
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2Au2PdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAu2Pd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 600 differ')
    count_failures += 1


# Testing pair no 601
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2AuPdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAuPdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 601 differ')
    count_failures += 1


# Testing pair no 602
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2AuPd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd2AuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 602 differ')
    count_failures += 1


# Testing pair no 603
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd3Au2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAu2Pd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 603 differ')
    count_failures += 1


# Testing pair no 604
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd3AuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAuPd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 604 differ')
    count_failures += 1


# Testing pair no 605
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd3AuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4Pd2AuPd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 605 differ')
    count_failures += 1


# Testing pair no 606
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd4AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAuPd4', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 606 differ')
    count_failures += 1


# Testing pair no 607
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd5Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd5', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 607 differ')
    count_failures += 1


# Testing pair no 608
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAuPdAu2PdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2PdAuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 608 differ')
    count_failures += 1


# Testing pair no 609
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2Au3PdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu3Pd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 609 differ')
    count_failures += 1


# Testing pair no 610
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2AuPdAuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 610 differ')
    count_failures += 1


# Testing pair no 611
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd3Au2PdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd3Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 611 differ')
    count_failures += 1


# Testing pair no 612
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd3AuPd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd3Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 612 differ')
    count_failures += 1


# Testing pair no 613
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd4AuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd4Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 613 differ')
    count_failures += 1


# Testing pair no 614
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3PdAu2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2PdAu2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 614 differ')
    count_failures += 1


# Testing pair no 615
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3PdAuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu3PdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 615 differ')
    count_failures += 1


# Testing pair no 616
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3PdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 616 differ')
    count_failures += 1


# Testing pair no 617
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3Pd2AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2PdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 617 differ')
    count_failures += 1


# Testing pair no 618
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3Pd3Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu3Pd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 618 differ')
    count_failures += 1


# Testing pair no 619
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3Pd4', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd4', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 619 differ')
    count_failures += 1


# Testing pair no 620
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2PdAuPd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPdAu2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 620 differ')
    count_failures += 1


# Testing pair no 621
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd2AuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd2Au2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 621 differ')
    count_failures += 1


# Testing pair no 622
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd4Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd4Au2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 622 differ')
    count_failures += 1


# Testing pair no 623
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAu3Pd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAu2Pd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 623 differ')
    count_failures += 1


# Testing pair no 624
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAu2Pd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2Au2PdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 624 differ')
    count_failures += 1


# Testing pair no 625
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPdAu2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2PdAuPdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 625 differ')
    count_failures += 1


# Testing pair no 626
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPdAuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 626 differ')
    count_failures += 1


# Testing pair no 627
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPd3Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd3AuPdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 627 differ')
    count_failures += 1


# Testing pair no 628
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd2AuPdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAuPd2AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 628 differ')
    count_failures += 1


# Testing pair no 629
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd2AuPd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd2AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 629 differ')
    count_failures += 1


# Testing pair no 630
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd3Au2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2Pd3AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 630 differ')
    count_failures += 1


# Testing pair no 631
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd3AuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 631 differ')
    count_failures += 1


# Testing pair no 632
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd5Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd5AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 632 differ')
    count_failures += 1


# Testing pair no 633
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2Au2Pd2AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPd2Au2Pd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 633 differ')
    count_failures += 1


# Testing pair no 634
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2Au2Pd3Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd3Au2Pd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 634 differ')
    count_failures += 1


# Testing pair no 635
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPdAuPdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAuPdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 635 differ')
    count_failures += 1


# Testing pair no 636
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPdAuPd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 636 differ')
    count_failures += 1


# Testing pair no 637
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd2Au2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2Pd2AuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 637 differ')
    count_failures += 1


# Testing pair no 638
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd2AuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd2AuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 638 differ')
    count_failures += 1


# Testing pair no 639
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd3AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPd3AuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 639 differ')
    count_failures += 1


# Testing pair no 640
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd4Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd4AuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 640 differ')
    count_failures += 1


# Testing pair no 641
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3Au2PdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAu2Pd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 641 differ')
    count_failures += 1


# Testing pair no 642
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3Au2Pd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2Au2Pd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 642 differ')
    count_failures += 1


# Testing pair no 643
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPdAu2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2PdAuPd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 643 differ')
    count_failures += 1


# Testing pair no 644
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPdAuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 644 differ')
    count_failures += 1


# Testing pair no 645
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPdAuPd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 645 differ')
    count_failures += 1


# Testing pair no 646
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPd2AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPd2AuPd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 646 differ')
    count_failures += 1


# Testing pair no 647
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPd3Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd3AuPd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 647 differ')
    count_failures += 1


# Testing pair no 648
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd4AuPdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAuPd4', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 648 differ')
    count_failures += 1


# Testing pair no 649
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd4AuPd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd4', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 649 differ')
    count_failures += 1


# Testing pair no 650
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd4AuPd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd3AuPd4', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 650 differ')
    count_failures += 1


# Testing pair no 651
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd5Au2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2Pd5', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 651 differ')
    count_failures += 1


# Testing pair no 652
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd5AuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd5', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 652 differ')
    count_failures += 1


# Testing pair no 653
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd5AuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd5', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 653 differ')
    count_failures += 1


# Testing pair no 654
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd6AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPd6', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 654 differ')
    count_failures += 1


# Testing pair no 655
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd7Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd7', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 655 differ')
    count_failures += 1


# Testing pair no 656
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd2AuPdAuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd2AuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 656 differ')
    count_failures += 1


# Testing pair no 657
count_all += 1
atoms_1 = Atoms(symbols='AuPd2Au2Pd2AuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd2Au2Pd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 657 differ')
    count_failures += 1


# Testing pair no 658
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAu2Pd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd2AuPd3Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 658 differ')
    count_failures += 1


# Testing pair no 659
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPdAuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPdAuPd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 659 differ')
    count_failures += 1


# Testing pair no 660
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd2AuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 660 differ')
    count_failures += 1


# Testing pair no 661
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPd3Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd2Au2Pd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 661 differ')
    count_failures += 1


# Testing pair no 662
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPd4', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd2AuPd4', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 662 differ')
    count_failures += 1


# Testing pair no 663
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd3AuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd3AuPd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 663 differ')
    count_failures += 1


# Testing pair no 664
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd3AuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd2AuPd2AuPd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 664 differ')
    count_failures += 1


# Testing pair no 665
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd5Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd2Au2Pd5', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 665 differ')
    count_failures += 1


# Testing pair no 666
count_all += 1
atoms_1 = Atoms(symbols='AuPd4AuPdAuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd4Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 666 differ')
    count_failures += 1


# Testing pair no 667
count_all += 1
atoms_1 = Atoms(symbols='AuPd4AuPdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd4AuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 667 differ')
    count_failures += 1


# Testing pair no 668
count_all += 1
atoms_1 = Atoms(symbols='AuPd4AuPd3Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd3AuPd4Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 668 differ')
    count_failures += 1


# Testing pair no 669
count_all += 1
atoms_1 = Atoms(symbols='AuPd6AuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd6Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 669 differ')
    count_failures += 1


# Testing pair no 670
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPdAuPdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPdAuPd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 670 differ')
    count_failures += 1


# Testing pair no 671
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPdAuPd4', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd5', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 671 differ')
    count_failures += 1


# Testing pair no 672
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPd3AuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd3AuPd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 672 differ')
    count_failures += 1


# Testing pair no 673
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPd6', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd7', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 673 differ')
    count_failures += 1


# Testing pair no 674
count_all += 1
atoms_1 = Atoms(symbols='PdAuPd3AuPd4', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd3AuPd5', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 674 differ')
    count_failures += 1


# Testing pair no 675
count_all += 1
atoms_1 = Atoms(symbols='PdAuPd8', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd9', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 6.928203230275509, -6.53197264742181],
                    [2.0, -10.392304845413264, -6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -9.79795897e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -6.53197265e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,   3.46410162e+00,  -6.53197265e+00],
         [4.44089210e-16,  -4.61880215e+00,  -9.79795897e+00],
         [4.44089210e-16,  -6.92820323e+00,  -6.53197265e+00],
         [3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [3.33066907e-16,  -4.80188422e-15,  -6.53197265e+00],
         [3.33066907e-16,   2.30940108e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 675 differ')
    count_failures += 1


# Testing pair no 676
count_all += 1
atoms_1 = Atoms(symbols='Au8PdAu', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au9Pd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 676 differ')
    count_failures += 1


# Testing pair no 677
count_all += 1
atoms_1 = Atoms(symbols='Au6PdAu2Pd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au8Pd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 677 differ')
    count_failures += 1


# Testing pair no 678
count_all += 1
atoms_1 = Atoms(symbols='Au6PdAuPdAu', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au7PdAuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 678 differ')
    count_failures += 1


# Testing pair no 679
count_all += 1
atoms_1 = Atoms(symbols='Au6Pd2AuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au6PdAuPd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 679 differ')
    count_failures += 1


# Testing pair no 680
count_all += 1
atoms_1 = Atoms(symbols='Au6Pd3Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au7Pd3', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 680 differ')
    count_failures += 1


# Testing pair no 681
count_all += 1
atoms_1 = Atoms(symbols='Au5Pd2AuPdAu', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAuPd2Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 681 differ')
    count_failures += 1


# Testing pair no 682
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAu4Pd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au7Pd2Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 682 differ')
    count_failures += 1


# Testing pair no 683
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAu3PdAu', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAu3Pd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 683 differ')
    count_failures += 1


# Testing pair no 684
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAu3Pd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd2Au2Pd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 684 differ')
    count_failures += 1


# Testing pair no 685
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAu2PdAuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au7Pd3', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 685 differ')
    count_failures += 1


# Testing pair no 686
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAu2Pd2Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd2Au2Pd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 686 differ')
    count_failures += 1


# Testing pair no 687
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPdAu2Pd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au7Pd3', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 687 differ')
    count_failures += 1


# Testing pair no 688
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPdAuPdAu', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAuPdAuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 688 differ')
    count_failures += 1


# Testing pair no 689
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPdAuPd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd3AuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 689 differ')
    count_failures += 1


# Testing pair no 690
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPd2AuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au6Pd4', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 690 differ')
    count_failures += 1


# Testing pair no 691
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPd3Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd3AuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 691 differ')
    count_failures += 1


# Testing pair no 692
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2Au3Pd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd2Au2Pd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 692 differ')
    count_failures += 1


# Testing pair no 693
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2Au2PdAu', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAu2Pd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 693 differ')
    count_failures += 1


# Testing pair no 694
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2AuPdAuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd3AuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 694 differ')
    count_failures += 1


# Testing pair no 695
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2AuPd2Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd2AuPd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 695 differ')
    count_failures += 1


# Testing pair no 696
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd3Au2Pd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAu2Pd3', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 696 differ')
    count_failures += 1


# Testing pair no 697
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd3AuPdAu', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAuPd3', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 697 differ')
    count_failures += 1


# Testing pair no 698
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd3AuPd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4Pd2AuPd3', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 698 differ')
    count_failures += 1


# Testing pair no 699
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd4AuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAuPd4', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 699 differ')
    count_failures += 1


# Testing pair no 700
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd5Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd5', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 700 differ')
    count_failures += 1


# Testing pair no 701
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAu2PdAu2Pd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAu2Pd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 701 differ')
    count_failures += 1


# Testing pair no 702
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAu2PdAuPdAu', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAuPd2Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 702 differ')
    count_failures += 1


# Testing pair no 703
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAu2PdAuPd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd2AuPd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 703 differ')
    count_failures += 1


# Testing pair no 704
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAuPdAu2PdAu', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAuPd2Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 704 differ')
    count_failures += 1


# Testing pair no 705
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAuPd2Au2Pd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAu2Pd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 705 differ')
    count_failures += 1


# Testing pair no 706
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2Au3PdAu', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu3Pd2Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 706 differ')
    count_failures += 1


# Testing pair no 707
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2Au2PdAuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu3Pd3', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 707 differ')
    count_failures += 1


# Testing pair no 708
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2Au2Pd2Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2Au3Pd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 708 differ')
    count_failures += 1


# Testing pair no 709
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2AuPdAu2Pd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd3Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 709 differ')
    count_failures += 1


# Testing pair no 710
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2AuPdAuPdAu', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPd2Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 710 differ')
    count_failures += 1


# Testing pair no 711
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2AuPd2AuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd4', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 711 differ')
    count_failures += 1


# Testing pair no 712
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2AuPd3Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPdAuPd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 712 differ')
    count_failures += 1


# Testing pair no 713
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd3Au2PdAu', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd3Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 713 differ')
    count_failures += 1


# Testing pair no 714
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd3AuPd2Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPdAuPd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 714 differ')
    count_failures += 1


# Testing pair no 715
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd4AuPdAu', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd4Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 715 differ')
    count_failures += 1


# Testing pair no 716
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3PdAu2Pd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAu2Pd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 716 differ')
    count_failures += 1


# Testing pair no 717
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3PdAuPdAu', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu3PdAuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 717 differ')
    count_failures += 1


# Testing pair no 718
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3PdAuPd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2AuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 718 differ')
    count_failures += 1


# Testing pair no 719
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3Pd2AuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd2AuPd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 719 differ')
    count_failures += 1


# Testing pair no 720
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3Pd3Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu3Pd3', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 720 differ')
    count_failures += 1


# Testing pair no 721
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3Pd4', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd4', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 721 differ')
    count_failures += 1


# Testing pair no 722
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2PdAuPdAuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAuPd3', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 722 differ')
    count_failures += 1


# Testing pair no 723
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2PdAuPd2Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd3Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 723 differ')
    count_failures += 1


# Testing pair no 724
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd2Au2Pd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4Pd2Au2Pd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 724 differ')
    count_failures += 1


# Testing pair no 725
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd2AuPdAu', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAu2Pd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 725 differ')
    count_failures += 1


# Testing pair no 726
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd3AuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4Pd2AuPd3', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 726 differ')
    count_failures += 1


# Testing pair no 727
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd4Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd4Au2Pd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 727 differ')
    count_failures += 1


# Testing pair no 728
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAu3Pd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAu2Pd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 728 differ')
    count_failures += 1


# Testing pair no 729
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAu2PdAuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd4Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 729 differ')
    count_failures += 1


# Testing pair no 730
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAu2Pd2Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu3Pd3', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 730 differ')
    count_failures += 1


# Testing pair no 731
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAu2Pd3', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd4Au2Pd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 731 differ')
    count_failures += 1


# Testing pair no 732
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPdAu2Pd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAuPd3', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 732 differ')
    count_failures += 1


# Testing pair no 733
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPdAuPdAu', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPdAuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 733 differ')
    count_failures += 1


# Testing pair no 734
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPdAuPd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3AuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 734 differ')
    count_failures += 1


# Testing pair no 735
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPd2AuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd5', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 735 differ')
    count_failures += 1


# Testing pair no 736
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPd3Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd3AuPdAuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 736 differ')
    count_failures += 1


# Testing pair no 737
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPd4', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd5AuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 737 differ')
    count_failures += 1


# Testing pair no 738
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd2Au2Pd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2Pd2AuPd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 738 differ')
    count_failures += 1


# Testing pair no 739
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd2AuPdAuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd5', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 739 differ')
    count_failures += 1


# Testing pair no 740
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd2AuPd2Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd4', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 740 differ')
    count_failures += 1


# Testing pair no 741
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd2AuPd3', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2Pd5', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 741 differ')
    count_failures += 1


# Testing pair no 742
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd3Au2Pd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4Pd2AuPd3', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 742 differ')
    count_failures += 1


# Testing pair no 743
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd3AuPdAu', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3AuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 743 differ')
    count_failures += 1


# Testing pair no 744
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd4AuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4Pd6', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 744 differ')
    count_failures += 1


# Testing pair no 745
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd5Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd5AuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 745 differ')
    count_failures += 1


# Testing pair no 746
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2Au2Pd2AuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2Pd2AuPd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 746 differ')
    count_failures += 1


# Testing pair no 747
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2Au2Pd3Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd3Au2Pd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 747 differ')
    count_failures += 1


# Testing pair no 748
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPdAuPdAuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3AuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 748 differ')
    count_failures += 1


# Testing pair no 749
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPdAuPd2Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPdAuPd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 749 differ')
    count_failures += 1


# Testing pair no 750
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd2Au2Pd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2Pd2AuPd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 750 differ')
    count_failures += 1


# Testing pair no 751
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd2AuPdAu', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd2AuPd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 751 differ')
    count_failures += 1


# Testing pair no 752
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd3AuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPd3AuPd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 752 differ')
    count_failures += 1


# Testing pair no 753
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd4Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd4AuPd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 753 differ')
    count_failures += 1


# Testing pair no 754
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3Au2PdAuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd4Au2Pd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 754 differ')
    count_failures += 1


# Testing pair no 755
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3Au2Pd2Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2Au2Pd3', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 755 differ')
    count_failures += 1


# Testing pair no 756
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPdAu2Pd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2PdAuPd3', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 756 differ')
    count_failures += 1


# Testing pair no 757
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPdAuPdAu', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPd3', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 757 differ')
    count_failures += 1


# Testing pair no 758
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPdAuPd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPdAuPd3', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 758 differ')
    count_failures += 1


# Testing pair no 759
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPd2AuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2Pd5', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 759 differ')
    count_failures += 1


# Testing pair no 760
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPd3Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd3AuPd3', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 760 differ')
    count_failures += 1


# Testing pair no 761
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd4AuPdAuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd5AuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 761 differ')
    count_failures += 1


# Testing pair no 762
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd4AuPd2Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd4', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 762 differ')
    count_failures += 1


# Testing pair no 763
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd4AuPd3', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd3AuPd4', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 763 differ')
    count_failures += 1


# Testing pair no 764
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd5Au2Pd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2Pd5', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 764 differ')
    count_failures += 1


# Testing pair no 765
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd5AuPdAu', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd5', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 765 differ')
    count_failures += 1


# Testing pair no 766
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd5AuPd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd5', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 766 differ')
    count_failures += 1


# Testing pair no 767
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd6AuPd', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPd6', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 767 differ')
    count_failures += 1


# Testing pair no 768
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd7Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd7', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 768 differ')
    count_failures += 1


# Testing pair no 769
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPdAuPdAuPd2Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPd3', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 769 differ')
    count_failures += 1


# Testing pair no 770
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPdAuPd2AuPdAu', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd4Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 770 differ')
    count_failures += 1


# Testing pair no 771
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPdAuPd2AuPd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd5', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 771 differ')
    count_failures += 1


# Testing pair no 772
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd2Au2Pd2Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd3Au2Pd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 772 differ')
    count_failures += 1


# Testing pair no 773
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd2Au2Pd3', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd3AuPd3', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 773 differ')
    count_failures += 1


# Testing pair no 774
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd2AuPdAuPdAu', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd4Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 774 differ')
    count_failures += 1


# Testing pair no 775
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd2AuPdAuPd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd6Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 775 differ')
    count_failures += 1


# Testing pair no 776
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd2AuPd3Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd4AuPd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 776 differ')
    count_failures += 1


# Testing pair no 777
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd2AuPd4', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd7', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 777 differ')
    count_failures += 1


# Testing pair no 778
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd3AuPd2Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPdAuPd3', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 778 differ')
    count_failures += 1


# Testing pair no 779
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd6Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd4AuPd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 779 differ')
    count_failures += 1


# Testing pair no 780
count_all += 1
atoms_1 = Atoms(symbols='AuPd2Au2Pd2AuPdAu', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd3Au2Pd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 780 differ')
    count_failures += 1


# Testing pair no 781
count_all += 1
atoms_1 = Atoms(symbols='AuPd2Au2Pd2AuPd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2Au2Pd4', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 781 differ')
    count_failures += 1


# Testing pair no 782
count_all += 1
atoms_1 = Atoms(symbols='AuPd2Au2Pd4Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd3Au2Pd3', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 782 differ')
    count_failures += 1


# Testing pair no 783
count_all += 1
atoms_1 = Atoms(symbols='AuPd2Au2Pd5', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd3AuPd4', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 783 differ')
    count_failures += 1


# Testing pair no 784
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAu2Pd3', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd4AuPd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 784 differ')
    count_failures += 1


# Testing pair no 785
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPdAuPdAu', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPd3', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 785 differ')
    count_failures += 1


# Testing pair no 786
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPdAuPd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd5', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 786 differ')
    count_failures += 1


# Testing pair no 787
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPd3Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd3AuPd3', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 787 differ')
    count_failures += 1


# Testing pair no 788
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPd4', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd7', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 788 differ')
    count_failures += 1


# Testing pair no 789
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd2AuPd3', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd5', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 789 differ')
    count_failures += 1


# Testing pair no 790
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd3AuPdAu', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPdAuPd3', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 790 differ')
    count_failures += 1


# Testing pair no 791
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd3AuPd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd5', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 791 differ')
    count_failures += 1


# Testing pair no 792
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd5Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd3AuPd4', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 792 differ')
    count_failures += 1


# Testing pair no 793
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd6', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd8', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 793 differ')
    count_failures += 1


# Testing pair no 794
count_all += 1
atoms_1 = Atoms(symbols='AuPd4AuPdAuPdAu', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd4Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 794 differ')
    count_failures += 1


# Testing pair no 795
count_all += 1
atoms_1 = Atoms(symbols='AuPd4AuPdAuPd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd4AuPd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 795 differ')
    count_failures += 1


# Testing pair no 796
count_all += 1
atoms_1 = Atoms(symbols='AuPd4AuPd3Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd3AuPd4Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 796 differ')
    count_failures += 1


# Testing pair no 797
count_all += 1
atoms_1 = Atoms(symbols='AuPd6AuPdAu', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd4AuPd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 797 differ')
    count_failures += 1


# Testing pair no 798
count_all += 1
atoms_1 = Atoms(symbols='AuPd8Au', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd4AuPd4', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 798 differ')
    count_failures += 1


# Testing pair no 799
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPdAuPdAuPd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPdAuPd3', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 799 differ')
    count_failures += 1


# Testing pair no 800
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPdAuPd4', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd5', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 800 differ')
    count_failures += 1


# Testing pair no 801
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPd3AuPd2', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd3AuPd3', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 801 differ')
    count_failures += 1


# Testing pair no 802
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPd6', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd7', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 802 differ')
    count_failures += 1


# Testing pair no 803
count_all += 1
atoms_1 = Atoms(symbols='PdAuPd3AuPd4', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd3AuPd5', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 803 differ')
    count_failures += 1


# Testing pair no 804
count_all += 1
atoms_1 = Atoms(symbols='PdAuPd8', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd9', pbc=True,
                cell=[[-6.0, 3.4641016151377544, 0.0],
                      [
                    2.0, -3.4641016151377544, -6.531972647421808],
                    [-4.0, -6.92820323027551, 6.5319726474218065]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-8.00000000e+00,  -4.61880215e+00,   3.26598632e+00],
         [-4.00000000e+00,   2.48604524e-16,  -5.52868406e-16],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,  -1.99391523e-15],
         [-4.44089210e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-6.00000000e+00,  -3.46410162e+00,  -4.86703646e-15],
         [-6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [-4.00000000e+00,  -6.92820323e+00,  -3.09965204e-15],
         [-4.00000000e+00,  -4.61880215e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 804 differ')
    count_failures += 1


# Testing pair no 805
count_all += 1
atoms_1 = Atoms(symbols='Au8PdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au9Pd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 805 differ')
    count_failures += 1


# Testing pair no 806
count_all += 1
atoms_1 = Atoms(symbols='Au7Pd2Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au8Pd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 806 differ')
    count_failures += 1


# Testing pair no 807
count_all += 1
atoms_1 = Atoms(symbols='Au6PdAuPdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au7PdAuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 807 differ')
    count_failures += 1


# Testing pair no 808
count_all += 1
atoms_1 = Atoms(symbols='Au6Pd2AuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au6PdAuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 808 differ')
    count_failures += 1


# Testing pair no 809
count_all += 1
atoms_1 = Atoms(symbols='Au6Pd3Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au7Pd3', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 809 differ')
    count_failures += 1


# Testing pair no 810
count_all += 1
atoms_1 = Atoms(symbols='Au5PdAu2PdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au6PdAu2Pd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 810 differ')
    count_failures += 1


# Testing pair no 811
count_all += 1
atoms_1 = Atoms(symbols='Au5PdAuPd2Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au6PdAuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 811 differ')
    count_failures += 1


# Testing pair no 812
count_all += 1
atoms_1 = Atoms(symbols='Au5Pd2Au2Pd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAu2Pd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 812 differ')
    count_failures += 1


# Testing pair no 813
count_all += 1
atoms_1 = Atoms(symbols='Au5Pd2AuPdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au6PdAuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 813 differ')
    count_failures += 1


# Testing pair no 814
count_all += 1
atoms_1 = Atoms(symbols='Au5Pd3AuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAuPd3', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 814 differ')
    count_failures += 1


# Testing pair no 815
count_all += 1
atoms_1 = Atoms(symbols='Au5Pd4Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au6Pd4', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 815 differ')
    count_failures += 1


# Testing pair no 816
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAu3PdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAu3Pd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 816 differ')
    count_failures += 1


# Testing pair no 817
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAu2Pd2Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAu2Pd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 817 differ')
    count_failures += 1


# Testing pair no 818
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPdAu2Pd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAu2PdAuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 818 differ')
    count_failures += 1


# Testing pair no 819
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPdAuPdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAuPdAuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 819 differ')
    count_failures += 1


# Testing pair no 820
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPd3Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAuPd3', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 820 differ')
    count_failures += 1


# Testing pair no 821
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2Au3Pd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAu3Pd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 821 differ')
    count_failures += 1


# Testing pair no 822
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2Au2PdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAu2Pd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 822 differ')
    count_failures += 1


# Testing pair no 823
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2AuPdAuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAuPdAuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 823 differ')
    count_failures += 1


# Testing pair no 824
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2AuPd2Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd2AuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 824 differ')
    count_failures += 1


# Testing pair no 825
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd3Au2Pd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAu2Pd3', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 825 differ')
    count_failures += 1


# Testing pair no 826
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd3AuPdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAuPd3', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 826 differ')
    count_failures += 1


# Testing pair no 827
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd3AuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4Pd2AuPd3', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 827 differ')
    count_failures += 1


# Testing pair no 828
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd4AuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAuPd4', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 828 differ')
    count_failures += 1


# Testing pair no 829
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd5Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd5', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 829 differ')
    count_failures += 1


# Testing pair no 830
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAu3Pd2Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAu3Pd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 830 differ')
    count_failures += 1


# Testing pair no 831
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAu2PdAuPdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAu2PdAuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 831 differ')
    count_failures += 1


# Testing pair no 832
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAu2Pd3Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAu2Pd3', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 832 differ')
    count_failures += 1


# Testing pair no 833
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAuPdAu2PdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAu2PdAuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 833 differ')
    count_failures += 1


# Testing pair no 834
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAuPdAuPd2Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAuPdAuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 834 differ')
    count_failures += 1


# Testing pair no 835
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAuPd2Au2Pd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2AuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 835 differ')
    count_failures += 1


# Testing pair no 836
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAuPd2AuPdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAuPd2AuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 836 differ')
    count_failures += 1


# Testing pair no 837
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAuPd4Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAuPd4', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 837 differ')
    count_failures += 1


# Testing pair no 838
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2Au3PdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAu3Pd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 838 differ')
    count_failures += 1


# Testing pair no 839
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2Au2PdAuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAu2Pd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 839 differ')
    count_failures += 1


# Testing pair no 840
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2Au2Pd2Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4Pd2Au2Pd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 840 differ')
    count_failures += 1


# Testing pair no 841
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2AuPdAu2Pd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2PdAuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 841 differ')
    count_failures += 1


# Testing pair no 842
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2AuPdAuPdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAuPdAuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 842 differ')
    count_failures += 1


# Testing pair no 843
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2AuPd2AuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd2AuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 843 differ')
    count_failures += 1


# Testing pair no 844
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2AuPd3Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4Pd2AuPd3', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 844 differ')
    count_failures += 1


# Testing pair no 845
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd3Au2PdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAu2Pd3', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 845 differ')
    count_failures += 1


# Testing pair no 846
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd3Au2Pd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2Au2Pd3', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 846 differ')
    count_failures += 1


# Testing pair no 847
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd3AuPdAuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPd3', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 847 differ')
    count_failures += 1


# Testing pair no 848
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd3AuPd2Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4Pd2AuPd3', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 848 differ')
    count_failures += 1


# Testing pair no 849
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd4Au2Pd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd4', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 849 differ')
    count_failures += 1


# Testing pair no 850
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd4AuPdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAuPd4', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 850 differ')
    count_failures += 1


# Testing pair no 851
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd4AuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd4', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 851 differ')
    count_failures += 1


# Testing pair no 852
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd5AuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd5', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 852 differ')
    count_failures += 1


# Testing pair no 853
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd6Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4Pd6', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 853 differ')
    count_failures += 1


# Testing pair no 854
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3PdAu2Pd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2PdAu2Pd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 854 differ')
    count_failures += 1


# Testing pair no 855
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3PdAuPdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu3PdAuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 855 differ')
    count_failures += 1


# Testing pair no 856
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3PdAuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2AuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 856 differ')
    count_failures += 1


# Testing pair no 857
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3Pd2AuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2PdAuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 857 differ')
    count_failures += 1


# Testing pair no 858
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3Pd3Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu3Pd3', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 858 differ')
    count_failures += 1


# Testing pair no 859
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3Pd4', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd4', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 859 differ')
    count_failures += 1


# Testing pair no 860
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2PdAuPd2Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2PdAuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 860 differ')
    count_failures += 1


# Testing pair no 861
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd2Au2Pd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2PdAu2Pd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 861 differ')
    count_failures += 1


# Testing pair no 862
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd2AuPdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2AuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 862 differ')
    count_failures += 1


# Testing pair no 863
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd3AuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2PdAuPd3', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 863 differ')
    count_failures += 1


# Testing pair no 864
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd4Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd4', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 864 differ')
    count_failures += 1


# Testing pair no 865
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAu3Pd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAu2Pd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 865 differ')
    count_failures += 1


# Testing pair no 866
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAu2Pd2Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAu2Pd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 866 differ')
    count_failures += 1


# Testing pair no 867
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPdAu2Pd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2PdAuPdAuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 867 differ')
    count_failures += 1


# Testing pair no 868
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPdAuPdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPdAuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 868 differ')
    count_failures += 1


# Testing pair no 869
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPd3Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPd3', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 869 differ')
    count_failures += 1


# Testing pair no 870
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd2AuPdAuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAuPd2AuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 870 differ')
    count_failures += 1


# Testing pair no 871
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd2AuPd2Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd2AuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 871 differ')
    count_failures += 1


# Testing pair no 872
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd3Au2Pd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2PdAuPd3', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 872 differ')
    count_failures += 1


# Testing pair no 873
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd3AuPdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3AuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 873 differ')
    count_failures += 1


# Testing pair no 874
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd5Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd5', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 874 differ')
    count_failures += 1


# Testing pair no 875
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2Au2Pd2AuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPd2Au2Pd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 875 differ')
    count_failures += 1


# Testing pair no 876
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2Au2Pd3Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2Au2Pd3', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 876 differ')
    count_failures += 1


# Testing pair no 877
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPdAuPdAuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAuPdAuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 877 differ')
    count_failures += 1


# Testing pair no 878
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPdAuPd2Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPdAuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 878 differ')
    count_failures += 1


# Testing pair no 879
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd2Au2Pd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2Pd2AuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 879 differ')
    count_failures += 1


# Testing pair no 880
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd2AuPdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd2AuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 880 differ')
    count_failures += 1


# Testing pair no 881
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd3AuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPd3AuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 881 differ')
    count_failures += 1


# Testing pair no 882
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd4Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd4', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 882 differ')
    count_failures += 1


# Testing pair no 883
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3Au2PdAuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAu2Pd3', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 883 differ')
    count_failures += 1


# Testing pair no 884
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3Au2Pd2Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2Au2Pd3', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 884 differ')
    count_failures += 1


# Testing pair no 885
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPdAu2Pd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2PdAuPd3', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 885 differ')
    count_failures += 1


# Testing pair no 886
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPdAuPdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPd3', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 886 differ')
    count_failures += 1


# Testing pair no 887
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPdAuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPdAuPd3', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 887 differ')
    count_failures += 1


# Testing pair no 888
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPd2AuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPd2AuPd3', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 888 differ')
    count_failures += 1


# Testing pair no 889
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPd3Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd3AuPd3', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 889 differ')
    count_failures += 1


# Testing pair no 890
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd4AuPdAuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAuPd4', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 890 differ')
    count_failures += 1


# Testing pair no 891
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd4AuPd2Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd4', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 891 differ')
    count_failures += 1


# Testing pair no 892
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd4AuPd3', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd3AuPd4', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 892 differ')
    count_failures += 1


# Testing pair no 893
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd5Au2Pd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2Pd5', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 893 differ')
    count_failures += 1


# Testing pair no 894
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd5AuPdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd5', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 894 differ')
    count_failures += 1


# Testing pair no 895
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd5AuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd5', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 895 differ')
    count_failures += 1


# Testing pair no 896
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd6AuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPd6', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 896 differ')
    count_failures += 1


# Testing pair no 897
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd7Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd7', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 897 differ')
    count_failures += 1


# Testing pair no 898
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPdAuPdAuPd2Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAuPdAuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 898 differ')
    count_failures += 1


# Testing pair no 899
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPdAuPd2AuPdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAuPd2AuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 899 differ')
    count_failures += 1


# Testing pair no 900
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPdAuPd4Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAuPd4', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 900 differ')
    count_failures += 1


# Testing pair no 901
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd2Au2Pd2Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPd2Au2Pd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 901 differ')
    count_failures += 1


# Testing pair no 902
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd2Au2Pd3', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPdAuPd3', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 902 differ')
    count_failures += 1


# Testing pair no 903
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd2AuPdAuPdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAuPd2AuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 903 differ')
    count_failures += 1


# Testing pair no 904
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd2AuPd3Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPd2AuPd3', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 904 differ')
    count_failures += 1


# Testing pair no 905
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd3AuPd2Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPd3AuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 905 differ')
    count_failures += 1


# Testing pair no 906
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd4AuPdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPd4AuPd', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 906 differ')
    count_failures += 1


# Testing pair no 907
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd4AuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd2AuPd4', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 907 differ')
    count_failures += 1


# Testing pair no 908
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd6Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPd6', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 908 differ')
    count_failures += 1


# Testing pair no 909
count_all += 1
atoms_1 = Atoms(symbols='AuPd2Au2Pd2AuPdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPd2Au2Pd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 909 differ')
    count_failures += 1


# Testing pair no 910
count_all += 1
atoms_1 = Atoms(symbols='AuPd2Au2Pd2AuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd2AuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 910 differ')
    count_failures += 1


# Testing pair no 911
count_all += 1
atoms_1 = Atoms(symbols='AuPd2Au2Pd4Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2Au2Pd4', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 911 differ')
    count_failures += 1


# Testing pair no 912
count_all += 1
atoms_1 = Atoms(symbols='AuPd2Au2Pd5', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd5', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 912 differ')
    count_failures += 1


# Testing pair no 913
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAu2Pd3', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPd2AuPd3', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 913 differ')
    count_failures += 1


# Testing pair no 914
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPdAuPdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAuPdAuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 914 differ')
    count_failures += 1


# Testing pair no 915
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPdAuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd2AuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 915 differ')
    count_failures += 1


# Testing pair no 916
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPd3Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPdAuPd3', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 916 differ')
    count_failures += 1


# Testing pair no 917
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPd4', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd2AuPd4', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 917 differ')
    count_failures += 1


# Testing pair no 918
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd3AuPdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPd3AuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 918 differ')
    count_failures += 1


# Testing pair no 919
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd3AuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd2AuPd2AuPd3', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 919 differ')
    count_failures += 1


# Testing pair no 920
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd5Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd5', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 920 differ')
    count_failures += 1


# Testing pair no 921
count_all += 1
atoms_1 = Atoms(symbols='AuPd3AuPd4Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd3AuPd4', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 921 differ')
    count_failures += 1


# Testing pair no 922
count_all += 1
atoms_1 = Atoms(symbols='AuPd4AuPdAuPdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAuPd4', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 922 differ')
    count_failures += 1


# Testing pair no 923
count_all += 1
atoms_1 = Atoms(symbols='AuPd4AuPdAuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd2AuPd4', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 923 differ')
    count_failures += 1


# Testing pair no 924
count_all += 1
atoms_1 = Atoms(symbols='AuPd4AuPd3Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd3AuPd4', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 924 differ')
    count_failures += 1


# Testing pair no 925
count_all += 1
atoms_1 = Atoms(symbols='AuPd6AuPdAu', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPd6', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 925 differ')
    count_failures += 1


# Testing pair no 926
count_all += 1
atoms_1 = Atoms(symbols='AuPd6AuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd2AuPd6', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 926 differ')
    count_failures += 1


# Testing pair no 927
count_all += 1
atoms_1 = Atoms(symbols='AuPd8Au', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd8', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 927 differ')
    count_failures += 1


# Testing pair no 928
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPdAuPdAuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPdAuPd3', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 928 differ')
    count_failures += 1


# Testing pair no 929
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPdAuPd4', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd5', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 929 differ')
    count_failures += 1


# Testing pair no 930
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPd3AuPd2', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd3AuPd3', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 930 differ')
    count_failures += 1


# Testing pair no 931
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPd6', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd7', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 931 differ')
    count_failures += 1


# Testing pair no 932
count_all += 1
atoms_1 = Atoms(symbols='PdAuPd3AuPd4', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd3AuPd5', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 932 differ')
    count_failures += 1


# Testing pair no 933
count_all += 1
atoms_1 = Atoms(symbols='PdAuPd8', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd9', pbc=True,
                cell=[[0.0, 6.928203230275509, -1.7763568394002505e-15], [
                    4.0, 0.0, 6.531972647421808],
                    [6.0, -3.4641016151377544, -6.531972647421808]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,  -2.97823745e-15],
         [6.00000000e+00,  -1.15470054e+00,   3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,  -2.42619228e-15],
         [2.00000000e+00,   5.77350269e+00,   3.26598632e+00],
         [8.00000000e+00,  -8.04883078e-16,  -5.10089323e-15],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [4.00000000e+00,  -5.64989471e-16,  -5.94017652e-15],
         [4.00000000e+00,   2.30940108e+00,   3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 933 differ')
    count_failures += 1


# Testing pair no 934
count_all += 1
atoms_1 = Atoms(symbols='Au8PdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au9Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 934 differ')
    count_failures += 1


# Testing pair no 935
count_all += 1
atoms_1 = Atoms(symbols='Au6PdAuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au7PdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 935 differ')
    count_failures += 1


# Testing pair no 936
count_all += 1
atoms_1 = Atoms(symbols='Au6Pd2AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au6PdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 936 differ')
    count_failures += 1


# Testing pair no 937
count_all += 1
atoms_1 = Atoms(symbols='Au6Pd3Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au7Pd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 937 differ')
    count_failures += 1


# Testing pair no 938
count_all += 1
atoms_1 = Atoms(symbols='Au5Pd2AuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAuPd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 938 differ')
    count_failures += 1


# Testing pair no 939
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAu3PdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAu3Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 939 differ')
    count_failures += 1


# Testing pair no 940
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAu2Pd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd2Au2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 940 differ')
    count_failures += 1


# Testing pair no 941
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPdAu2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAu2PdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 941 differ')
    count_failures += 1


# Testing pair no 942
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPdAuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAuPdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 942 differ')
    count_failures += 1


# Testing pair no 943
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPd3Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd3AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 943 differ')
    count_failures += 1


# Testing pair no 944
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2Au3Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAu3Pd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 944 differ')
    count_failures += 1


# Testing pair no 945
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2Au2PdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAu2Pd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 945 differ')
    count_failures += 1


# Testing pair no 946
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2AuPdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAuPdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 946 differ')
    count_failures += 1


# Testing pair no 947
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2AuPd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd2AuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 947 differ')
    count_failures += 1


# Testing pair no 948
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd3Au2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAu2Pd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 948 differ')
    count_failures += 1


# Testing pair no 949
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd3AuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAuPd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 949 differ')
    count_failures += 1


# Testing pair no 950
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd3AuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4Pd2AuPd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 950 differ')
    count_failures += 1


# Testing pair no 951
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd4AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4PdAuPd4', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 951 differ')
    count_failures += 1


# Testing pair no 952
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd5Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd5', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 952 differ')
    count_failures += 1


# Testing pair no 953
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAuPdAu2PdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2PdAuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 953 differ')
    count_failures += 1


# Testing pair no 954
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2Au3PdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu3Pd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 954 differ')
    count_failures += 1


# Testing pair no 955
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2AuPdAuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 955 differ')
    count_failures += 1


# Testing pair no 956
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd3Au2PdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd3Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 956 differ')
    count_failures += 1


# Testing pair no 957
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd3AuPd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd3Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 957 differ')
    count_failures += 1


# Testing pair no 958
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd4AuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd4Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 958 differ')
    count_failures += 1


# Testing pair no 959
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3PdAu2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2PdAu2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 959 differ')
    count_failures += 1


# Testing pair no 960
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3PdAuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu3PdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 960 differ')
    count_failures += 1


# Testing pair no 961
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3PdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd2AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 961 differ')
    count_failures += 1


# Testing pair no 962
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3Pd2AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2PdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 962 differ')
    count_failures += 1


# Testing pair no 963
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3Pd3Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu3Pd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 963 differ')
    count_failures += 1


# Testing pair no 964
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3Pd4', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd4', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 964 differ')
    count_failures += 1


# Testing pair no 965
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2PdAuPd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPdAu2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 965 differ')
    count_failures += 1


# Testing pair no 966
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd2AuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd2Au2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 966 differ')
    count_failures += 1


# Testing pair no 967
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd4Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd4Au2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 967 differ')
    count_failures += 1


# Testing pair no 968
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAu3Pd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAu2Pd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 968 differ')
    count_failures += 1


# Testing pair no 969
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAu2Pd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2Au2PdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 969 differ')
    count_failures += 1


# Testing pair no 970
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPdAu2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2PdAuPdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 970 differ')
    count_failures += 1


# Testing pair no 971
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPdAuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 971 differ')
    count_failures += 1


# Testing pair no 972
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPd3Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd3AuPdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 972 differ')
    count_failures += 1


# Testing pair no 973
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd2AuPdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAuPd2AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 973 differ')
    count_failures += 1


# Testing pair no 974
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd2AuPd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd2AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 974 differ')
    count_failures += 1


# Testing pair no 975
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd3Au2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2Pd3AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 975 differ')
    count_failures += 1


# Testing pair no 976
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd3AuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 976 differ')
    count_failures += 1


# Testing pair no 977
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd5Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd5AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 977 differ')
    count_failures += 1


# Testing pair no 978
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2Au2Pd2AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPd2Au2Pd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 978 differ')
    count_failures += 1


# Testing pair no 979
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2Au2Pd3Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd3Au2Pd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 979 differ')
    count_failures += 1


# Testing pair no 980
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPdAuPdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAuPdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 980 differ')
    count_failures += 1


# Testing pair no 981
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPdAuPd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 981 differ')
    count_failures += 1


# Testing pair no 982
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd2Au2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2Pd2AuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 982 differ')
    count_failures += 1


# Testing pair no 983
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd2AuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd2AuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 983 differ')
    count_failures += 1


# Testing pair no 984
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd3AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPd3AuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 984 differ')
    count_failures += 1


# Testing pair no 985
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd4Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd4AuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 985 differ')
    count_failures += 1


# Testing pair no 986
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3Au2PdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAu2Pd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 986 differ')
    count_failures += 1


# Testing pair no 987
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3Au2Pd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2Au2Pd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 987 differ')
    count_failures += 1


# Testing pair no 988
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPdAu2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2PdAuPd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 988 differ')
    count_failures += 1


# Testing pair no 989
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPdAuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 989 differ')
    count_failures += 1


# Testing pair no 990
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPdAuPd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 990 differ')
    count_failures += 1


# Testing pair no 991
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPd2AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPd2AuPd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 991 differ')
    count_failures += 1


# Testing pair no 992
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPd3Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd3AuPd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 992 differ')
    count_failures += 1


# Testing pair no 993
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd4AuPdAuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPdAuPd4', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 993 differ')
    count_failures += 1


# Testing pair no 994
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd4AuPd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd4', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 994 differ')
    count_failures += 1


# Testing pair no 995
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd4AuPd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd3AuPd4', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 995 differ')
    count_failures += 1


# Testing pair no 996
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd5Au2Pd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAu2Pd5', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 996 differ')
    count_failures += 1


# Testing pair no 997
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd5AuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd5', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 997 differ')
    count_failures += 1


# Testing pair no 998
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd5AuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd5', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 998 differ')
    count_failures += 1


# Testing pair no 999
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd6AuPd', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2PdAuPd6', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 999 differ')
    count_failures += 1


# Testing pair no 1000
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd7Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd7', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1000 differ')
    count_failures += 1


# Testing pair no 1001
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd2AuPdAuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd2AuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1001 differ')
    count_failures += 1


# Testing pair no 1002
count_all += 1
atoms_1 = Atoms(symbols='AuPd2Au2Pd2AuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd2Au2Pd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1002 differ')
    count_failures += 1


# Testing pair no 1003
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAu2Pd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd2AuPd3Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1003 differ')
    count_failures += 1


# Testing pair no 1004
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPdAuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPdAuPd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1004 differ')
    count_failures += 1


# Testing pair no 1005
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd2AuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1005 differ')
    count_failures += 1


# Testing pair no 1006
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPd3Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd2Au2Pd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1006 differ')
    count_failures += 1


# Testing pair no 1007
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPd4', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd2AuPd4', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1007 differ')
    count_failures += 1


# Testing pair no 1008
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd3AuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd3AuPd2Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1008 differ')
    count_failures += 1


# Testing pair no 1009
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd3AuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd2AuPd2AuPd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1009 differ')
    count_failures += 1


# Testing pair no 1010
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd5Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd2Au2Pd5', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1010 differ')
    count_failures += 1


# Testing pair no 1011
count_all += 1
atoms_1 = Atoms(symbols='AuPd4AuPdAuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd4Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1011 differ')
    count_failures += 1


# Testing pair no 1012
count_all += 1
atoms_1 = Atoms(symbols='AuPd4AuPdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd4AuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1012 differ')
    count_failures += 1


# Testing pair no 1013
count_all += 1
atoms_1 = Atoms(symbols='AuPd4AuPd3Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd3AuPd4Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1013 differ')
    count_failures += 1


# Testing pair no 1014
count_all += 1
atoms_1 = Atoms(symbols='AuPd6AuPdAu', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd6Au', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1014 differ')
    count_failures += 1


# Testing pair no 1015
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPdAuPdAuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPdAuPd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1015 differ')
    count_failures += 1


# Testing pair no 1016
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPdAuPd4', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd5', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1016 differ')
    count_failures += 1


# Testing pair no 1017
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPd3AuPd2', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd3AuPd3', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1017 differ')
    count_failures += 1


# Testing pair no 1018
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPd6', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd7', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1018 differ')
    count_failures += 1


# Testing pair no 1019
count_all += 1
atoms_1 = Atoms(symbols='PdAuPd3AuPd4', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd3AuPd5', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1019 differ')
    count_failures += 1


# Testing pair no 1020
count_all += 1
atoms_1 = Atoms(symbols='PdAuPd8', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd9', pbc=True,
                cell=[
                    [-4.0, 0.0, 0.0],
                    [0.0, 0.0, -6.531972647421808],
                    [2.0, -17.32050807568877, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.50111070e+01,  -3.26598632e+00],
         [0.00000000e+00,  -1.38564065e+01,   0.00000000e+00],
         [0.00000000e+00,  -1.15470054e+01,  -3.26598632e+00],
         [-2.00000000e+00,  -1.03923048e+01,   0.00000000e+00],
         [-2.00000000e+00,  -8.08290377e+00,  -3.26598632e+00],
         [-3.33066907e-16,  -6.92820323e+00,   0.00000000e+00],
         [-3.33066907e-16,  -4.61880215e+00,  -3.26598632e+00],
         [-2.00000000e+00,  -3.46410162e+00,   0.00000000e+00],
         [-2.00000000e+00,  -1.15470054e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1020 differ')
    count_failures += 1


# Testing pair no 1021
count_all += 1
atoms_1 = Atoms(symbols='Au8PdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au9Pd', pbc=True,
                cell=[[0.0, 0.0, -6.531972647421808],
                      [
                    0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1021 differ')
    count_failures += 1


# Testing pair no 1022
count_all += 1
atoms_1 = Atoms(symbols='Au6PdAu2Pd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au7Pd2Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1022 differ')
    count_failures += 1


# Testing pair no 1023
count_all += 1
atoms_1 = Atoms(symbols='Au6PdAuPdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au7PdAuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1023 differ')
    count_failures += 1


# Testing pair no 1024
count_all += 1
atoms_1 = Atoms(symbols='Au6PdAuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au7Pd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1024 differ')
    count_failures += 1


# Testing pair no 1025
count_all += 1
atoms_1 = Atoms(symbols='Au6Pd2AuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au7Pd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1025 differ')
    count_failures += 1


# Testing pair no 1026
count_all += 1
atoms_1 = Atoms(symbols='Au6Pd3Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au7Pd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1026 differ')
    count_failures += 1


# Testing pair no 1027
count_all += 1
atoms_1 = Atoms(symbols='Au5Pd2AuPdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAuPd2Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1027 differ')
    count_failures += 1


# Testing pair no 1028
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAu4Pd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAu2PdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1028 differ')
    count_failures += 1


# Testing pair no 1029
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAu3PdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAu3Pd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1029 differ')
    count_failures += 1


# Testing pair no 1030
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAu3Pd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAu2Pd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1030 differ')
    count_failures += 1


# Testing pair no 1031
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAu2PdAuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAuPd2Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1031 differ')
    count_failures += 1


# Testing pair no 1032
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAu2Pd2Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd2Au2Pd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1032 differ')
    count_failures += 1


# Testing pair no 1033
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAu2Pd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd2AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1033 differ')
    count_failures += 1


# Testing pair no 1034
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPdAu2Pd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAuPd2Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1034 differ')
    count_failures += 1


# Testing pair no 1035
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPdAuPdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAuPdAuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1035 differ')
    count_failures += 1


# Testing pair no 1036
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPdAuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAuPd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1036 differ')
    count_failures += 1


# Testing pair no 1037
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPd2AuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd4Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1037 differ')
    count_failures += 1


# Testing pair no 1038
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPd3Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd3AuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1038 differ')
    count_failures += 1


# Testing pair no 1039
count_all += 1
atoms_1 = Atoms(symbols='Au4PdAuPd4', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd5', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1039 differ')
    count_failures += 1


# Testing pair no 1040
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2Au3Pd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAu2Pd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1040 differ')
    count_failures += 1


# Testing pair no 1041
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2Au2PdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAu2Pd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1041 differ')
    count_failures += 1


# Testing pair no 1042
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2AuPdAuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAuPd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1042 differ')
    count_failures += 1


# Testing pair no 1043
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd2AuPd2Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd2AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1043 differ')
    count_failures += 1


# Testing pair no 1044
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd3Au2Pd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd2AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1044 differ')
    count_failures += 1


# Testing pair no 1045
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd3AuPdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5PdAuPd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1045 differ')
    count_failures += 1


# Testing pair no 1046
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd3AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au4Pd2AuPd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1046 differ')
    count_failures += 1


# Testing pair no 1047
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd4AuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd5', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1047 differ')
    count_failures += 1


# Testing pair no 1048
count_all += 1
atoms_1 = Atoms(symbols='Au4Pd5Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au5Pd5', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1048 differ')
    count_failures += 1


# Testing pair no 1049
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAu2PdAu2Pd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu3Pd2Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1049 differ')
    count_failures += 1


# Testing pair no 1050
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAu2Pd2AuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu3Pd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1050 differ')
    count_failures += 1


# Testing pair no 1051
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAu2Pd3Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2PdAuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1051 differ')
    count_failures += 1


# Testing pair no 1052
count_all += 1
atoms_1 = Atoms(symbols='Au3PdAuPdAu2PdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2PdAuPdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1052 differ')
    count_failures += 1


# Testing pair no 1053
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2Au3PdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu3Pd2Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1053 differ')
    count_failures += 1


# Testing pair no 1054
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2Au2PdAuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd2Au2Pd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1054 differ')
    count_failures += 1


# Testing pair no 1055
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd2AuPdAuPdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPd2Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1055 differ')
    count_failures += 1


# Testing pair no 1056
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd3Au2PdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2PdAuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1056 differ')
    count_failures += 1


# Testing pair no 1057
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd3AuPdAuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3AuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1057 differ')
    count_failures += 1


# Testing pair no 1058
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd3AuPd2Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd3Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1058 differ')
    count_failures += 1


# Testing pair no 1059
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd4Au2Pd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd2AuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1059 differ')
    count_failures += 1


# Testing pair no 1060
count_all += 1
atoms_1 = Atoms(symbols='Au3Pd4AuPdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd4Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1060 differ')
    count_failures += 1


# Testing pair no 1061
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3PdAu2Pd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu3Pd2Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1061 differ')
    count_failures += 1


# Testing pair no 1062
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3PdAuPdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu3PdAuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1062 differ')
    count_failures += 1


# Testing pair no 1063
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3PdAuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu3Pd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1063 differ')
    count_failures += 1


# Testing pair no 1064
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3Pd2AuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2PdAuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1064 differ')
    count_failures += 1


# Testing pair no 1065
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3Pd3Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu3Pd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1065 differ')
    count_failures += 1


# Testing pair no 1066
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu3Pd4', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAu2Pd4', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1066 differ')
    count_failures += 1


# Testing pair no 1067
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2PdAu2Pd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2Au3Pd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1067 differ')
    count_failures += 1


# Testing pair no 1068
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2PdAuPdAuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPd2Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1068 differ')
    count_failures += 1


# Testing pair no 1069
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2PdAuPd2Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPdAu2Pd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1069 differ')
    count_failures += 1


# Testing pair no 1070
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2PdAuPd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPdAuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1070 differ')
    count_failures += 1


# Testing pair no 1071
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd2Au2Pd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2Au2Pd2Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1071 differ')
    count_failures += 1


# Testing pair no 1072
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd2AuPdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd2Au2Pd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1072 differ')
    count_failures += 1


# Testing pair no 1073
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd2AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2Au2Pd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1073 differ')
    count_failures += 1


# Testing pair no 1074
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd3AuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd3Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1074 differ')
    count_failures += 1


# Testing pair no 1075
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd4Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd2AuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1075 differ')
    count_failures += 1


# Testing pair no 1076
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAu2Pd5', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd4', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1076 differ')
    count_failures += 1


# Testing pair no 1077
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAu3Pd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAu2Pd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1077 differ')
    count_failures += 1


# Testing pair no 1078
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAu2PdAuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd2AuPdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1078 differ')
    count_failures += 1


# Testing pair no 1079
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAu2Pd2Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd2Au2Pd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1079 differ')
    count_failures += 1


# Testing pair no 1080
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAu2Pd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd2AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1080 differ')
    count_failures += 1


# Testing pair no 1081
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPdAu2Pd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPd2Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1081 differ')
    count_failures += 1


# Testing pair no 1082
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPdAuPdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPdAuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1082 differ')
    count_failures += 1


# Testing pair no 1083
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPdAuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1083 differ')
    count_failures += 1


# Testing pair no 1084
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPd2AuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd4Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1084 differ')
    count_failures += 1


# Testing pair no 1085
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPd3Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3AuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1085 differ')
    count_failures += 1


# Testing pair no 1086
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPdAuPd4', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd5', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1086 differ')
    count_failures += 1


# Testing pair no 1087
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd2Au2Pd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd3Au2Pd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1087 differ')
    count_failures += 1


# Testing pair no 1088
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd2AuPdAuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd4Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1088 differ')
    count_failures += 1


# Testing pair no 1089
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd2AuPd2Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd2AuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1089 differ')
    count_failures += 1


# Testing pair no 1090
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd2AuPd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd4AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1090 differ')
    count_failures += 1


# Testing pair no 1091
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd3Au2Pd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd3Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1091 differ')
    count_failures += 1


# Testing pair no 1092
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd3AuPdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd3AuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1092 differ')
    count_failures += 1


# Testing pair no 1093
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd3AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd3AuPd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1093 differ')
    count_failures += 1


# Testing pair no 1094
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd4AuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd6Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1094 differ')
    count_failures += 1


# Testing pair no 1095
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd5Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd5AuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1095 differ')
    count_failures += 1


# Testing pair no 1096
count_all += 1
atoms_1 = Atoms(symbols='Au2PdAuPd6', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd7', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1096 differ')
    count_failures += 1


# Testing pair no 1097
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2Au2Pd2AuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd3Au2Pd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1097 differ')
    count_failures += 1


# Testing pair no 1098
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2Au2Pd3Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd3Au2Pd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1098 differ')
    count_failures += 1


# Testing pair no 1099
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPdAuPdAuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1099 differ')
    count_failures += 1


# Testing pair no 1100
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPdAuPd2Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPdAuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1100 differ')
    count_failures += 1


# Testing pair no 1101
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd2Au2Pd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2Au2Pd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1101 differ')
    count_failures += 1


# Testing pair no 1102
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd2AuPdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd2AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1102 differ')
    count_failures += 1


# Testing pair no 1103
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd3AuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd3AuPd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1103 differ')
    count_failures += 1


# Testing pair no 1104
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd2AuPd4Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd4AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1104 differ')
    count_failures += 1


# Testing pair no 1105
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3Au2PdAuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd2AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1105 differ')
    count_failures += 1


# Testing pair no 1106
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3Au2Pd2Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2Au2Pd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1106 differ')
    count_failures += 1


# Testing pair no 1107
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3Au2Pd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd2AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1107 differ')
    count_failures += 1


# Testing pair no 1108
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPdAu2Pd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPdAuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1108 differ')
    count_failures += 1


# Testing pair no 1109
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPdAuPdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPdAuPd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1109 differ')
    count_failures += 1


# Testing pair no 1110
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPdAuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPdAuPd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1110 differ')
    count_failures += 1


# Testing pair no 1111
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPd2AuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd4AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1111 differ')
    count_failures += 1


# Testing pair no 1112
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPd3Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd3AuPd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1112 differ')
    count_failures += 1


# Testing pair no 1113
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd3AuPd4', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd5', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1113 differ')
    count_failures += 1


# Testing pair no 1114
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd4AuPdAuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd5', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1114 differ')
    count_failures += 1


# Testing pair no 1115
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd4AuPd2Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd4', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1115 differ')
    count_failures += 1


# Testing pair no 1116
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd4AuPd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd5', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1116 differ')
    count_failures += 1


# Testing pair no 1117
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd5Au2Pd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd2AuPd4', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1117 differ')
    count_failures += 1


# Testing pair no 1118
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd5AuPdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3PdAuPd5', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1118 differ')
    count_failures += 1


# Testing pair no 1119
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd5AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au2Pd2AuPd5', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1119 differ')
    count_failures += 1


# Testing pair no 1120
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd6AuPd', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd7', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1120 differ')
    count_failures += 1


# Testing pair no 1121
count_all += 1
atoms_1 = Atoms(symbols='Au2Pd7Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='Au3Pd7', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1121 differ')
    count_failures += 1


# Testing pair no 1122
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPdAuPd4Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd2AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1122 differ')
    count_failures += 1


# Testing pair no 1123
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd2AuPdAuPdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd2AuPdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1123 differ')
    count_failures += 1


# Testing pair no 1124
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd3AuPd2Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd2Au2Pd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1124 differ')
    count_failures += 1


# Testing pair no 1125
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd4AuPdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd2AuPdAuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1125 differ')
    count_failures += 1


# Testing pair no 1126
count_all += 1
atoms_1 = Atoms(symbols='AuPdAuPd6Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd2AuPd4', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1126 differ')
    count_failures += 1


# Testing pair no 1127
count_all += 1
atoms_1 = Atoms(symbols='AuPd2Au2Pd2AuPdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd2Au2Pd2Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1127 differ')
    count_failures += 1


# Testing pair no 1128
count_all += 1
atoms_1 = Atoms(symbols='AuPd2Au2Pd4Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd2Au2Pd2AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1128 differ')
    count_failures += 1


# Testing pair no 1129
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAu2Pd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd2AuPd3Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1129 differ')
    count_failures += 1


# Testing pair no 1130
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPdAuPdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPdAuPd2Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1130 differ')
    count_failures += 1


# Testing pair no 1131
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPdAuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd2AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1131 differ')
    count_failures += 1


# Testing pair no 1132
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPd3Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd2Au2Pd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1132 differ')
    count_failures += 1


# Testing pair no 1133
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPdAuPd4', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd2AuPd4', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1133 differ')
    count_failures += 1


# Testing pair no 1134
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd3AuPdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd2Au2Pd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1134 differ')
    count_failures += 1


# Testing pair no 1135
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd3AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd2AuPd2AuPd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1135 differ')
    count_failures += 1


# Testing pair no 1136
count_all += 1
atoms_1 = Atoms(symbols='AuPd2AuPd5Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd2Au2Pd5', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1136 differ')
    count_failures += 1


# Testing pair no 1137
count_all += 1
atoms_1 = Atoms(symbols='AuPd3AuPd4Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd2AuPd2AuPd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1137 differ')
    count_failures += 1


# Testing pair no 1138
count_all += 1
atoms_1 = Atoms(symbols='AuPd4AuPdAuPdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd2AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1138 differ')
    count_failures += 1


# Testing pair no 1139
count_all += 1
atoms_1 = Atoms(symbols='AuPd4AuPdAuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd4AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1139 differ')
    count_failures += 1


# Testing pair no 1140
count_all += 1
atoms_1 = Atoms(symbols='AuPd4AuPd3Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd2AuPd2AuPd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1140 differ')
    count_failures += 1


# Testing pair no 1141
count_all += 1
atoms_1 = Atoms(symbols='AuPd6AuPdAu', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd2AuPd4', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1141 differ')
    count_failures += 1


# Testing pair no 1142
count_all += 1
atoms_1 = Atoms(symbols='AuPd6AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd4AuPd4', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1142 differ')
    count_failures += 1


# Testing pair no 1143
count_all += 1
atoms_1 = Atoms(symbols='AuPd8Au', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd2AuPd6', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1143 differ')
    count_failures += 1


# Testing pair no 1144
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPdAuPdAuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPdAuPd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1144 differ')
    count_failures += 1


# Testing pair no 1145
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPdAuPd4', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPdAuPd5', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1145 differ')
    count_failures += 1


# Testing pair no 1146
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPd3AuPd2', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd3AuPd3', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1146 differ')
    count_failures += 1


# Testing pair no 1147
count_all += 1
atoms_1 = Atoms(symbols='PdAuPdAuPd6', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPdAuPd7', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1147 differ')
    count_failures += 1


# Testing pair no 1148
count_all += 1
atoms_1 = Atoms(symbols='PdAuPd3AuPd4', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd3AuPd5', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1148 differ')
    count_failures += 1


# Testing pair no 1149
count_all += 1
atoms_1 = Atoms(symbols='PdAuPd8', pbc=True,
                cell=[
                    [0.0, 0.0, -6.531972647421808],
                    [0.0, 6.928203230275509, 0.0],
                    [10.0, -3.4641016151377535, 0.0]])
atoms_1.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

atoms_2 = Atoms(symbols='AuPd9', pbc=True,
                cell=[[0.0, 0.0, -6.531972647421808],
                      [0.0, 6.928203230275509, 0.0],
                      [10.0, -3.4641016151377535, 0.0]])
atoms_2.set_positions(
    np.array(
        [[0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [0.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [8.00000000e+00,   1.17843061e-15,   0.00000000e+00],
         [8.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [6.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [6.00000000e+00,  -1.15470054e+00,  -3.26598632e+00],
         [4.00000000e+00,   4.05268398e-15,   0.00000000e+00],
         [4.00000000e+00,   2.30940108e+00,  -3.26598632e+00],
         [2.00000000e+00,   3.46410162e+00,   0.00000000e+00],
         [2.00000000e+00,   5.77350269e+00,  -3.26598632e+00]]))

cv_1 = np.array(cs.get_cluster_vector(atoms_1))
cv_2 = np.array(cs.get_cluster_vector(atoms_2))

if not np.allclose(cv_1, cv_2) and (get_spacegroup(atoms_1)
                                    == get_spacegroup(atoms_2)):
    print('Cluster vectors from equivalent structure pair 1149 differ')
    count_failures += 1


print('{} structure pairs out of {} failed'.format(
    count_failures, count_all))
assert count_failures == 0
